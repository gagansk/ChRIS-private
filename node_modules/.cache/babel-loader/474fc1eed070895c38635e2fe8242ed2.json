{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport styles from \"../../@patternfly/patternfly/components/Page/page.css.js\";\nimport { css } from '@patternfly/react-styles';\nimport PropTypes from 'prop-types';\nvar propTypes = {\n  /** Additional classes added to the page sidebar */\n  className: PropTypes.string,\n\n  /** Component to render the side navigation (e.g. <Nav /> */\n  nav: PropTypes.node,\n\n  /** Programmatically manage if the side nav is shown, if isManagedSidebar is set to true in the Page component, this prop is managed */\n  isNavOpen: PropTypes.bool,\n\n  /** Additional props are spread to the container <aside> */\n  '': PropTypes.any\n};\nvar defaultProps = {\n  className: '',\n  nav: null,\n  isNavOpen: true\n};\n\nvar PageSidebar = function PageSidebar(_ref) {\n  var className = _ref.className,\n      nav = _ref.nav,\n      isNavOpen = _ref.isNavOpen,\n      props = _objectWithoutProperties(_ref, [\"className\", \"nav\", \"isNavOpen\"]);\n\n  return React.createElement(\"div\", _extends({\n    id: \"page-sidebar\",\n    className: css(styles.pageSidebar, isNavOpen && styles.modifiers.expanded, !isNavOpen && styles.modifiers.collapsed, className)\n  }, props), nav);\n};\n\nPageSidebar.propTypes = propTypes;\nPageSidebar.defaultProps = defaultProps;\nexport default PageSidebar;","map":null,"metadata":{},"sourceType":"module"}