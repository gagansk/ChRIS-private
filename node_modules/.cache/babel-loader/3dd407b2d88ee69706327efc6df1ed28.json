{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../../@patternfly/patternfly/components/Table/table.css.js';\nimport { css } from '@patternfly/react-styles';\n\nvar RowWrapper = function RowWrapper(_ref) {\n  var isOpen = _ref.isOpen,\n      isExpanded = _ref.isExpanded,\n      props = _objectWithoutProperties(_ref, ['isOpen', 'isExpanded']);\n\n  return React.createElement('tr', _extends({}, props, {\n    className: css(isExpanded !== undefined && styles.tableExpandableRow, isExpanded && styles.modifiers.expanded),\n    hidden: isExpanded !== undefined && !isExpanded\n  }));\n};\n\nRowWrapper.propTypes = {\n  isOpen: PropTypes.bool,\n  isExpanded: PropTypes.bool\n};\nRowWrapper.defaultProps = {\n  isOpen: undefined,\n  isExpanded: undefined\n};\nexport default RowWrapper;","map":null,"metadata":{},"sourceType":"module"}