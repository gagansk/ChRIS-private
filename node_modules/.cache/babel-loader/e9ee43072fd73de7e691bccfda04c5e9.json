{"ast":null,"code":"import _objectSpread from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { FeedActionTypes } from \"./types\"; // Type-safe initialState\n\nvar initialState = {\n  details: undefined,\n  items: undefined,\n  feeds: undefined // selected: undefined,\n  // descendants: undefined\n\n}; // ***** NOTE: Working *****\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FeedActionTypes.GET_ALL_FEEDS_SUCCESS:\n      {\n        // return { ...state, feeds: action.payload.collection.items }; // Using the chrisApi\n        return _objectSpread({}, state, {\n          feeds: action.payload.data.results\n        }); // Using the chrisApi\n      }\n\n    case FeedActionTypes.GET_FEED_DETAILS_SUCCESS:\n      {\n        // return { ...state, details: action.payload.collection.items }; // Using the api\n        return _objectSpread({}, state, {\n          details: action.payload\n        });\n      }\n\n    case FeedActionTypes.GET_PLUGIN_INSTANCES_SUCCESS:\n      {\n        // Note: when using the ChrisAPI the items will be action.payload.collection.items\n        // return { ...state, items: action.payload.collection.items }; //Note: For API call... stub\n        return _objectSpread({}, state, {\n          items: action.payload.data.results\n        });\n      }\n\n    case FeedActionTypes.FETCH_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case FeedActionTypes.FETCH_SUCCESS:\n      {\n        // Note: when using the ChrisAPI the items will be action.payload.collection.items\n        // return { ...state, items: action.payload.collection.items }; //Note: For API call... stub\n        return _objectSpread({}, state, {\n          items: action.payload.data.results\n        });\n      }\n\n    case FeedActionTypes.FETCH_ERROR:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case FeedActionTypes.FETCH_COMPLETE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case FeedActionTypes.RESET_STATE:\n      {\n        return _objectSpread({}, state, {\n          items: undefined,\n          details: undefined\n        });\n      }\n    //  ***** Working *****\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport { reducer as feedReducer };","map":{"version":3,"sources":["/Users/gakumar/Desktop/charts-private/ChRIS_ui/src/store/feed/reducer.ts"],"names":["FeedActionTypes","initialState","details","undefined","items","feeds","reducer","state","action","type","GET_ALL_FEEDS_SUCCESS","payload","data","results","GET_FEED_DETAILS_SUCCESS","GET_PLUGIN_INSTANCES_SUCCESS","FETCH_REQUEST","FETCH_SUCCESS","FETCH_ERROR","FETCH_COMPLETE","RESET_STATE","feedReducer"],"mappings":";AACA,SAAqBA,eAArB,QAA4C,SAA5C,C,CAEA;;AACA,IAAMC,YAAwB,GAAG;AAC/BC,EAAAA,OAAO,EAAEC,SADsB;AAE/BC,EAAAA,KAAK,EAAED,SAFwB;AAG/BE,EAAAA,KAAK,EAAEF,SAHwB,CAI/B;AACA;;AAL+B,CAAjC,C,CAQA;;AACA,IAAMG,OAA4B,GAAG,SAA/BA,OAA+B,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AACrE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,eAAe,CAACU,qBAArB;AAA4C;AAC3C;AACC,iCAAYH,KAAZ;AAAmBF,UAAAA,KAAK,EAAEG,MAAM,CAACG,OAAP,CAAeC,IAAf,CAAoBC;AAA9C,WAF0C,CAEe;AAC1D;;AACD,SAAKb,eAAe,CAACc,wBAArB;AAA+C;AAC7C;AACA,iCAAYP,KAAZ;AAAmBL,UAAAA,OAAO,EAAEM,MAAM,CAACG;AAAnC;AACD;;AACD,SAAKX,eAAe,CAACe,4BAArB;AAAmD;AACjD;AACA;AACA,iCAAYR,KAAZ;AAAmBH,UAAAA,KAAK,EAAEI,MAAM,CAACG,OAAP,CAAeC,IAAf,CAAoBC;AAA9C;AACD;;AACD,SAAKb,eAAe,CAACgB,aAArB;AAAoC;AAClC,iCAAYT,KAAZ;AACD;;AACD,SAAKP,eAAe,CAACiB,aAArB;AAAoC;AAClC;AACA;AACA,iCAAYV,KAAZ;AAAmBH,UAAAA,KAAK,EAAEI,MAAM,CAACG,OAAP,CAAeC,IAAf,CAAoBC;AAA9C;AACD;;AACD,SAAKb,eAAe,CAACkB,WAArB;AAAkC;AAChC,iCAAYX,KAAZ;AACD;;AACD,SAAKP,eAAe,CAACmB,cAArB;AAAqC;AACnC,iCAAYZ,KAAZ;AACD;;AACD,SAAKP,eAAe,CAACoB,WAArB;AAAkC;AAChC,iCAAYb,KAAZ;AAAmBH,UAAAA,KAAK,EAAED,SAA1B;AAAqCD,UAAAA,OAAO,EAAEC;AAA9C;AACD;AACD;;AACA;AAAS;AACP,eAAOI,KAAP;AACD;AAlCH;AAoCD,CArCD;;AAuCA,SAASD,OAAO,IAAIe,WAApB","sourcesContent":["import { Reducer } from \"redux\";\nimport { IFeedState, FeedActionTypes } from \"./types\";\n\n// Type-safe initialState\nconst initialState: IFeedState = {\n  details: undefined,\n  items: undefined,\n  feeds: undefined\n  // selected: undefined,\n  // descendants: undefined\n};\n\n// ***** NOTE: Working *****\nconst reducer: Reducer<IFeedState> = (state = initialState, action) => {\n  switch (action.type) {\n    case FeedActionTypes.GET_ALL_FEEDS_SUCCESS: {\n     // return { ...state, feeds: action.payload.collection.items }; // Using the chrisApi\n      return { ...state, feeds: action.payload.data.results }; // Using the chrisApi\n    }\n    case FeedActionTypes.GET_FEED_DETAILS_SUCCESS: {\n      // return { ...state, details: action.payload.collection.items }; // Using the api\n      return { ...state, details: action.payload };\n    }\n    case FeedActionTypes.GET_PLUGIN_INSTANCES_SUCCESS: {\n      // Note: when using the ChrisAPI the items will be action.payload.collection.items\n      // return { ...state, items: action.payload.collection.items }; //Note: For API call... stub\n      return { ...state, items: action.payload.data.results };\n    }\n    case FeedActionTypes.FETCH_REQUEST: {\n      return { ...state };\n    }\n    case FeedActionTypes.FETCH_SUCCESS: {\n      // Note: when using the ChrisAPI the items will be action.payload.collection.items\n      // return { ...state, items: action.payload.collection.items }; //Note: For API call... stub\n      return { ...state, items: action.payload.data.results };\n    }\n    case FeedActionTypes.FETCH_ERROR: {\n      return { ...state };\n    }\n    case FeedActionTypes.FETCH_COMPLETE: {\n      return { ...state };\n    }\n    case FeedActionTypes.RESET_STATE: {\n      return { ...state, items: undefined, details: undefined };\n    }\n    //  ***** Working *****\n    default: {\n      return state;\n    }\n  }\n};\n\nexport { reducer as feedReducer };\n"]},"metadata":{},"sourceType":"module"}