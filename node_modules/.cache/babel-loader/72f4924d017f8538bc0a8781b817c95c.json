{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport { getSize, propTypes, defaultProps } from './common';\nvar currentId = 0;\n\nvar createIcon = function createIcon(iconDefinition) {\n  var viewBox = [iconDefinition.xOffset || 0, iconDefinition.yOffset || 0, iconDefinition.width, iconDefinition.height].join(' ');\n  var transform = iconDefinition.transform;\n\n  var Icon = function (_React$Component) {\n    _inherits(Icon, _React$Component);\n\n    function Icon() {\n      var _ref;\n\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, Icon);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Icon.__proto__ || Object.getPrototypeOf(Icon)).call.apply(_ref, [this].concat(args))), _this), _this.id = 'icon-title-' + currentId++, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(Icon, [{\n      key: 'render',\n      value: function render() {\n        var _props = this.props,\n            size = _props.size,\n            color = _props.color,\n            title = _props.title,\n            props = _objectWithoutProperties(_props, ['size', 'color', 'title']);\n\n        var hasTitle = Boolean(title);\n        var heightWidth = getSize(size);\n        var baseAlign = -.125 * Number.parseFloat(heightWidth);\n        return React.createElement('svg', _extends({\n          style: {\n            verticalAlign: baseAlign + 'em'\n          },\n          fill: color,\n          height: heightWidth,\n          width: heightWidth,\n          viewBox: viewBox,\n          'aria-labelledby': hasTitle ? this.id : null,\n          'aria-hidden': hasTitle ? null : true,\n          role: 'img'\n        }, props), hasTitle && React.createElement('title', {\n          id: this.id\n        }, title), React.createElement('path', {\n          d: iconDefinition.svgPath,\n          transform: transform\n        }));\n      }\n    }]);\n\n    return Icon;\n  }(React.Component);\n\n  Icon.displayName = iconDefinition.name;\n  Icon.propTypes = propTypes;\n  Icon.defaultProps = defaultProps;\n  return Icon;\n};\n\nexport default createIcon;","map":null,"metadata":{},"sourceType":"module"}