{"ast":null,"code":"import _classCallCheck from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/src/components/feed/FeedTree.tsx\";\nimport React, { createRef } from \"react\";\nimport * as d3 from \"d3\";\nimport * as cola from \"webcola\";\nimport TreeModel from \"../../api/models/tree.model\";\nimport TreeNodeModel from \"../../api/models/tree-node.model\";\n\nvar FeedTree =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FeedTree, _React$Component);\n\n  function FeedTree() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FeedTree);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FeedTree)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.treeRef = createRef();\n\n    _this.setActiveNode = function (node) {\n      var onNodeClick = _this.props.onNodeClick;\n      d3.selectAll(\".nodegroup.active\").attr(\"class\", \"nodegroup\");\n      var activeNode = d3.select(\"#node_\".concat(node.item.id));\n\n      if (!!activeNode && !activeNode.empty()) {\n        activeNode.attr(\"class\", \"nodegroup active\");\n        onNodeClick(node.item);\n      }\n    };\n\n    _this.buildFeedTree = function (tree, treeDiv) {\n      var width = !!treeDiv.current && treeDiv.current.clientWidth > 0 ? treeDiv.current.clientWidth : window.innerWidth / 2 - 290,\n          height = TreeNodeModel.calculateTotalTreeHeight(tree.totalRows);\n      var d3cola = cola.d3adaptor(d3).avoidOverlaps(true).size([width, height]);\n      var svg = d3.select(\"#tree\").append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n      var nodeRadius = 8;\n      tree.nodes.forEach(function (v) {\n        v.height = v.width = 2 * nodeRadius;\n        v.label = v.item.plugin_name.length > 7 ? \"\".concat(v.item.plugin_name.substring(0, 7), \"...\") : v.item.plugin_name;\n      }); // Set up Webcola\n\n      d3cola.nodes(tree.nodes).links(tree.links).flowLayout(\"y\", 70).symmetricDiffLinkLengths(20).start(10, 15, 20); // Define arrow markers for tree links\n\n      svg.append(\"svg:defs\").append(\"svg:marker\").attr(\"id\", \"end-arrow\").attr(\"viewBox\", \"0 -5 10 10\").attr(\"refX\", 6).attr(\"markerWidth\", 5).attr(\"markerHeight\", 5).attr(\"orient\", \"auto\").append(\"svg:path\").attr(\"d\", \"M0,-5L10,0L0,5\").attr(\"fill\", \"#fff\"); // Define tree links\n\n      var path = svg.selectAll(\".link\").data(tree.links).enter().append(\"svg:path\").attr(\"class\", \"link\"); // Create and place the \"blocks\" containing the circle and the text\n\n      var elemEnter = svg.selectAll(\"g\").data(tree.nodes).enter().append(\"g\").attr(\"id\", function (d) {\n        // set the node id using the plugin id\n        return \"node_\".concat(d.item.id);\n      }).attr(\"class\", \"nodegroup\").on(\"click\", _this.setActiveNode).call(d3cola.drag);\n      var label = elemEnter.append(\"text\").text(function (d) {\n        return d.label;\n      }).attr(\"class\", \"nodelabel\"); // Define tree nodes\n\n      var node = elemEnter.append(\"circle\").attr(\"class\", \"node\").attr(\"r\", nodeRadius).on(\"mouseover\", _this.handleMouseOver).on(\"mouseout\", _this.handleMouseOut); // Move links and nodes together\n\n      d3cola.on(\"tick\", function () {\n        // draw directed edges with proper padding from node centers\n        path.attr(\"d\", function (d) {\n          var deltaX = d.target.x - d.source.x,\n              deltaY = d.target.y - d.source.y,\n              dist = Math.sqrt(deltaX * deltaX + deltaY * deltaY),\n              normX = deltaX / dist,\n              normY = deltaY / dist,\n              sourcePadding = nodeRadius + 25,\n              targetPadding = nodeRadius + 10,\n              sourceX = d.source.x + sourcePadding * normX,\n              sourceY = d.source.y + sourcePadding * normY,\n              targetX = d.target.x - targetPadding * normX,\n              targetY = d.target.y - targetPadding * normY;\n          return \"M \".concat(sourceX, \" \").concat(sourceY, \" L \").concat(targetX, \" \").concat(targetY);\n        }); // path.attr(\"stroke-dasharray\", \"5, 5\") // For dashed lines\n        // Position the nodes:\n\n        node.attr(\"cx\", function (d) {\n          return d.x;\n        }).attr(\"cy\", function (d) {\n          return d.y;\n        }); // Position labels and tooltip:\n\n        label.attr(\"transform\", function (d) {\n          return \"translate(\".concat(d.x - nodeRadius * 2, \", \").concat(d.y + nodeRadius * 2.5, \" )\");\n        });\n      }); // end of on tick\n    };\n\n    _this.handleMouseOver = function (d, i) {\n      var tooltip = document.getElementById(\"tooltip\");\n      var tooltipWidth = 200;\n\n      if (!!tooltip) {\n        var title = \"Plugin Name: \".concat(d.item.plugin_name);\n        tooltip.innerHTML = title;\n        var height = tooltip.offsetHeight;\n        tooltip.style.width = tooltipWidth + \"px\";\n        tooltip.style.opacity = \"1\";\n        tooltip.style.left = d.x - tooltipWidth * 0.5 + \"px\";\n        tooltip.style.top = d.y - (height + 25) + \"px\";\n      }\n    };\n\n    _this.handleMouseOut = function (d, i) {\n      var tooltip = document.getElementById(\"tooltip\");\n\n      if (!!tooltip) {\n        tooltip.innerHTML = \"\";\n        tooltip.style.opacity = \"0\";\n        tooltip.style.left = \"-9999px\";\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(FeedTree, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var items = this.props.items;\n\n      if (!!this.treeRef.current && !!items && items.length > 0) {\n        var tree = new TreeModel(items);\n\n        if (!!tree.treeChart) {\n          this.buildFeedTree(tree.treeChart, this.treeRef); // Set root node active on load:\n\n          tree.treeChart.nodes.length > 0 && this.setActiveNode(tree.treeChart.nodes[0]);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        ref: this.treeRef,\n        id: \"tree\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"tooltip\",\n        className: \"tooltip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }));\n    } // Description: set active node\n\n  }, {\n    key: \"componentWillUnmount\",\n    // Description: Destroy d3 content\n    value: function componentWillUnmount() {\n      !!d3 && d3.select(\"#tree\").remove();\n    }\n  }]);\n\n  return FeedTree;\n}(React.Component);\n\nexport default FeedTree;","map":{"version":3,"sources":["/Users/gakumar/Desktop/charts-private/ChRIS_ui/src/components/feed/FeedTree.tsx"],"names":["React","createRef","d3","cola","TreeModel","TreeNodeModel","FeedTree","treeRef","setActiveNode","node","onNodeClick","props","selectAll","attr","activeNode","select","item","id","empty","buildFeedTree","tree","treeDiv","width","current","clientWidth","window","innerWidth","height","calculateTotalTreeHeight","totalRows","d3cola","d3adaptor","avoidOverlaps","size","svg","append","nodeRadius","nodes","forEach","v","label","plugin_name","length","substring","links","flowLayout","symmetricDiffLinkLengths","start","path","data","enter","elemEnter","d","on","call","drag","text","handleMouseOver","handleMouseOut","deltaX","target","x","source","deltaY","y","dist","Math","sqrt","normX","normY","sourcePadding","targetPadding","sourceX","sourceY","targetX","targetY","i","tooltip","document","getElementById","tooltipWidth","title","innerHTML","offsetHeight","style","opacity","left","top","items","treeChart","remove","Component"],"mappings":"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","sourcesContent":["import React, { createRef, RefObject } from \"react\";\nimport * as d3 from \"d3\";\nimport * as cola from \"webcola\";\nimport TreeModel, { ITreeChart } from \"../../api/models/tree.model\";\nimport TreeNodeModel, { INode } from \"../../api/models/tree-node.model\";\nimport { IPluginItem } from \"../../api/models/pluginInstance.model\";\n\ninterface ITreeProps {\n  items: IPluginItem[];\n}\n\ninterface ITreeActions {\n  onNodeClick: (node: any) => void;\n}\n\ntype AllProps = ITreeProps & ITreeActions;\n\nclass FeedTree extends React.Component<AllProps> {\n  private treeRef = createRef<HTMLDivElement>();\n  componentDidMount() {\n    const { items } = this.props;\n    if (!!this.treeRef.current && !!items && items.length > 0) {\n      const tree = new TreeModel(items);\n      if (!!tree.treeChart) {\n        this.buildFeedTree(tree.treeChart, this.treeRef);\n        // Set root node active on load:\n        tree.treeChart.nodes.length > 0 &&\n          this.setActiveNode(tree.treeChart.nodes[0]);\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div ref={this.treeRef} id=\"tree\">\n        <div id=\"tooltip\" className=\"tooltip\" />\n      </div>\n    );\n  }\n\n  // Description: set active node\n  setActiveNode = (node: INode) => {\n    const { onNodeClick } = this.props;\n    d3.selectAll(\".nodegroup.active\").attr(\"class\", \"nodegroup\");\n    const activeNode = d3.select(`#node_${node.item.id}`);\n    if (!!activeNode && !activeNode.empty()) {\n      activeNode.attr(\"class\", \"nodegroup active\");\n      onNodeClick(node.item);\n    }\n  }\n\n  // ---------------------------------------------------------------------\n  // Description: Builds Webcola/D3 Feed Tree\n  buildFeedTree = (\n    tree: ITreeChart,\n    treeDiv: React.RefObject<HTMLDivElement>\n  ) => {\n    const width =\n        !!treeDiv.current && treeDiv.current.clientWidth > 0\n          ? treeDiv.current.clientWidth\n          : window.innerWidth / 2 - 290,\n      height = TreeNodeModel.calculateTotalTreeHeight(tree.totalRows);\n\n    const d3cola = cola\n      .d3adaptor(d3)\n      .avoidOverlaps(true)\n      .size([width, height]);\n\n    const svg = d3\n      .select(\"#tree\")\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    const nodeRadius = 8;\n    tree.nodes.forEach((v: any) => {\n      v.height = v.width = 2 * nodeRadius;\n      v.label =\n        v.item.plugin_name.length > 7\n          ? `${v.item.plugin_name.substring(0, 7)}...`\n          : v.item.plugin_name;\n    });\n\n\n\n    // Set up Webcola\n    d3cola\n      .nodes(tree.nodes)\n      .links(tree.links)\n      .flowLayout(\"y\", 70)\n      .symmetricDiffLinkLengths(20)\n      .start(10, 15, 20);\n\n    // Define arrow markers for tree links\n    svg\n      .append(\"svg:defs\")\n      .append(\"svg:marker\")\n      .attr(\"id\", \"end-arrow\")\n      .attr(\"viewBox\", \"0 -5 10 10\")\n      .attr(\"refX\", 6)\n      .attr(\"markerWidth\", 5)\n      .attr(\"markerHeight\", 5)\n      .attr(\"orient\", \"auto\")\n      .append(\"svg:path\")\n      .attr(\"d\", \"M0,-5L10,0L0,5\")\n      .attr(\"fill\", \"#fff\");\n\n    // Define tree links\n    const path = svg\n      .selectAll(\".link\")\n      .data(tree.links)\n      .enter()\n      .append(\"svg:path\")\n      .attr(\"class\", \"link\");\n\n    // Create and place the \"blocks\" containing the circle and the text\n    const elemEnter = svg\n      .selectAll(\"g\")\n      .data(tree.nodes)\n      .enter()\n      .append(\"g\")\n      .attr(\"id\", (d: any) => {\n        // set the node id using the plugin id\n        return `node_${d.item.id}`;\n      })\n      .attr(\"class\", \"nodegroup\")\n      .on(\"click\", this.setActiveNode)\n      .call(d3cola.drag);\n\n    const label = elemEnter\n      .append(\"text\")\n      .text((d: any) => {\n        return d.label;\n      })\n      .attr(\"class\", \"nodelabel\");\n\n    // Define tree nodes\n    const node = elemEnter\n      .append(\"circle\")\n      .attr(\"class\", \"node\")\n      .attr(\"r\", nodeRadius)\n      .on(\"mouseover\", this.handleMouseOver)\n      .on(\"mouseout\", this.handleMouseOut);\n\n    // Move links and nodes together\n    d3cola.on(\"tick\", () => {\n      // draw directed edges with proper padding from node centers\n      path.attr(\"d\", (d: any) => {\n        const deltaX = d.target.x - d.source.x,\n          deltaY = d.target.y - d.source.y,\n          dist = Math.sqrt(deltaX * deltaX + deltaY * deltaY),\n          normX = deltaX / dist,\n          normY = deltaY / dist,\n          sourcePadding = nodeRadius + 25,\n          targetPadding = nodeRadius + 10,\n          sourceX = d.source.x + sourcePadding * normX,\n          sourceY = d.source.y + sourcePadding * normY,\n          targetX = d.target.x - targetPadding * normX,\n          targetY = d.target.y - targetPadding * normY;\n        return `M ${sourceX} ${sourceY} L ${targetX} ${targetY}`;\n      });\n\n      // path.attr(\"stroke-dasharray\", \"5, 5\") // For dashed lines\n      // Position the nodes:\n      node\n        .attr(\"cx\", (d: any) => {\n          return d.x;\n        })\n        .attr(\"cy\", (d: any) => {\n          return d.y;\n        });\n\n      // Position labels and tooltip:\n      label.attr(\"transform\", (d: any) => {\n        return `translate(${d.x - nodeRadius * 2}, ${d.y + nodeRadius * 2.5} )`;\n      });\n    }); // end of on tick\n  }\n\n  handleMouseOver = (d: any, i: number) => {\n    const tooltip = document.getElementById(\"tooltip\");\n    const tooltipWidth = 200;\n    if (!!tooltip) {\n      const title = `Plugin Name: ${d.item.plugin_name}`;\n      tooltip.innerHTML = title;\n      const height = tooltip.offsetHeight;\n      tooltip.style.width = tooltipWidth + \"px\";\n      tooltip.style.opacity = \"1\";\n      tooltip.style.left = (d.x - tooltipWidth * 0.5) + \"px\";\n      tooltip.style.top = (d.y - (height + 25)) + \"px\";\n    }\n  }\n\n  handleMouseOut = (d: any, i: number) => {\n    const tooltip = document.getElementById(\"tooltip\");\n    if (!!tooltip) {\n      tooltip.innerHTML = \"\";\n      tooltip.style.opacity = \"0\";\n      tooltip.style.left = \"-9999px\";\n    }\n  }\n\n  // Description: Destroy d3 content\n  componentWillUnmount() {\n    !!d3 && d3.select(\"#tree\").remove();\n  }\n}\n\nexport default FeedTree;\n"]},"metadata":{},"sourceType":"module"}