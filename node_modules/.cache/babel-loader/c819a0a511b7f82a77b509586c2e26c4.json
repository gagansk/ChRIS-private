{"ast":null,"code":"import _classCallCheck from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/src/components/pipeline/PipelineTree.tsx\";\nimport React, { createRef } from \"react\";\nimport * as d3 from \"d3\";\nimport * as cola from \"webcola\";\nimport TreeModel from \"../../api/models/tree.model\";\nimport TreeNodeModel from \"../../api/models/tree-node.model\";\n\nvar PipelineTree =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PipelineTree, _React$Component);\n\n  function PipelineTree() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PipelineTree);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PipelineTree)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.treeRef = createRef();\n\n    _this.buildPipelineTree = function (tree, treeDiv) {\n      var width = !!treeDiv.current && treeDiv.current.clientWidth > 0 ? treeDiv.current.clientWidth : window.innerWidth / 2 - 290,\n          height = TreeNodeModel.calculateTotalTreeHeight(tree.totalRows); // Need to calculate SVG height ***** working\n\n      var d3cola = cola.d3adaptor(d3).avoidOverlaps(true).size([width, height]);\n      var svg = d3.select(\"#pipelineTree\").append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n      var nodeRadius = 8;\n      tree.nodes.forEach(function (v) {\n        v.height = v.width = 2 * nodeRadius;\n        v.label = v.item.plugin_name.length > 7 ? \"\".concat(v.item.plugin_name.substring(0, 7), \"...\") : v.item.plugin_name;\n      }); // Set up Webcola\n\n      d3cola.nodes(tree.nodes).links(tree.links).flowLayout(\"y\", 70).symmetricDiffLinkLengths(20).start(10, 15, 20); // Define arrow markers for tree links\n\n      svg.append(\"svg:defs\").append(\"svg:marker\").attr(\"id\", \"end-arrow\").attr(\"viewBox\", \"0 -5 10 10\").attr(\"refX\", 6).attr(\"markerWidth\", 5).attr(\"markerHeight\", 5).attr(\"orient\", \"auto\").append(\"svg:path\").attr(\"d\", \"M0,-5L10,0L0,5\").attr(\"fill\", \"#fff\"); // Define tree links\n\n      var path = svg.selectAll(\".link\").data(tree.links).enter().append(\"svg:path\").attr(\"class\", \"link\"); // Create and place the \"blocks\" containing the circle and the text\n\n      var elemEnter = svg.selectAll(\"g\").data(tree.nodes).enter().append(\"g\").attr(\"id\", function (d) {\n        return \"node_\".concat(d.item.id); // set the node id using the plugin id\n      }).attr(\"class\", function (d) {\n        return \"nodegroup \".concat(d.isRoot && \"active\"); // set the node id using the plugin id\n      }).call(d3cola.drag);\n      var label = elemEnter.append(\"text\").text(function (d) {\n        return d.label;\n      }).attr(\"class\", \"nodelabel\"); // Define tree nodes\n\n      var node = elemEnter.append(\"circle\").attr(\"class\", \"node\").attr(\"r\", nodeRadius).on(\"mouseover\", _this.handleMouseOver).on(\"mouseout\", _this.handleMouseOut); // Move links and nodes together\n\n      d3cola.on(\"tick\", function () {\n        // draw directed edges with proper padding from node centers\n        path.attr(\"d\", function (d) {\n          var deltaX = d.target.x - d.source.x,\n              deltaY = d.target.y - d.source.y,\n              dist = Math.sqrt(deltaX * deltaX + deltaY * deltaY),\n              normX = deltaX / dist,\n              normY = deltaY / dist,\n              sourcePadding = nodeRadius + 25,\n              targetPadding = nodeRadius + 10,\n              sourceX = d.source.x + sourcePadding * normX,\n              sourceY = d.source.y + sourcePadding * normY,\n              targetX = d.target.x - targetPadding * normX,\n              targetY = d.target.y - targetPadding * normY;\n          return \"M \".concat(sourceX, \" \").concat(sourceY, \" L \").concat(targetX, \" \").concat(targetY);\n        }); // Position the nodes:\n\n        node.attr(\"cx\", function (d) {\n          return d.x;\n        }).attr(\"cy\", function (d) {\n          return d.y;\n        }); // Position labels and tooltip:\n\n        label.attr(\"transform\", function (d) {\n          return \"translate(\".concat(d.x - nodeRadius * 2, \", \").concat(d.y + nodeRadius * 2.5, \" )\");\n        });\n      }); // end of on tick\n    };\n\n    _this.handleMouseOver = function (d, i) {\n      var tooltip = document.getElementById(\"pTooltip\");\n      var tooltipWidth = 200;\n\n      if (!!tooltip) {\n        var title = \"Plugin Name: \".concat(d.item.plugin_name);\n        tooltip.innerHTML = title;\n        var height = tooltip.offsetHeight;\n        tooltip.style.width = tooltipWidth + \"px\";\n        tooltip.style.opacity = \"1\";\n        tooltip.style.left = d.x - tooltipWidth * 0.5 + \"px\";\n        tooltip.style.top = d.y - (height + 25) + \"px\";\n      }\n    };\n\n    _this.handleMouseOut = function (d, i) {\n      var tooltip = document.getElementById(\"pTooltip\");\n\n      if (!!tooltip) {\n        tooltip.innerHTML = \"\";\n        tooltip.style.opacity = \"0\";\n        tooltip.style.left = \"-9999px\";\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(PipelineTree, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var items = this.props.items;\n      this.updateTree(items); // Needed for the onload\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var items = this.props.items;\n      !!this.treeRef.current && !!items && items.length > 0 && this.updateTree(items);\n      return React.createElement(\"div\", {\n        ref: this.treeRef,\n        id: \"pipelineTree\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"pTooltip\",\n        className: \"tooltip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n    } // Description: Build the tree from items passed to the component\n\n  }, {\n    key: \"updateTree\",\n    value: function updateTree(items) {\n      var selected = this.props.selected;\n      !!d3 && d3.select(\"#pipelineTree\").selectAll(\"svg\").remove();\n\n      var _items = TreeNodeModel.isRootNode(selected) ? [selected] : items;\n\n      var tree = new TreeModel(_items, selected.previous_id);\n      !!tree.treeChart && this.buildPipelineTree(tree.treeChart, this.treeRef);\n    } // ---------------------------------------------------------------------\n    // Description: Builds Webcola/D3 Feed Tree\n\n  }, {\n    key: \"componentWillUnmount\",\n    // Description: Destroy d3 content\n    value: function componentWillUnmount() {\n      !!d3 && d3.select(\"#pipelineTree\").remove();\n    }\n  }]);\n\n  return PipelineTree;\n}(React.Component);\n\nexport default PipelineTree;","map":{"version":3,"sources":["/Users/gakumar/Desktop/charts-private/ChRIS_ui/src/components/pipeline/PipelineTree.tsx"],"names":["React","createRef","d3","cola","TreeModel","TreeNodeModel","PipelineTree","treeRef","buildPipelineTree","tree","treeDiv","width","current","clientWidth","window","innerWidth","height","calculateTotalTreeHeight","totalRows","d3cola","d3adaptor","avoidOverlaps","size","svg","select","append","attr","nodeRadius","nodes","forEach","v","label","item","plugin_name","length","substring","links","flowLayout","symmetricDiffLinkLengths","start","path","selectAll","data","enter","elemEnter","d","id","isRoot","call","drag","text","node","on","handleMouseOver","handleMouseOut","deltaX","target","x","source","deltaY","y","dist","Math","sqrt","normX","normY","sourcePadding","targetPadding","sourceX","sourceY","targetX","targetY","i","tooltip","document","getElementById","tooltipWidth","title","innerHTML","offsetHeight","style","opacity","left","top","items","props","updateTree","selected","remove","_items","isRootNode","previous_id","treeChart","Component"],"mappings":"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","sourcesContent":["import React, { createRef } from \"react\";\nimport * as d3 from \"d3\";\nimport * as cola from \"webcola\";\nimport TreeModel, { ITreeChart } from \"../../api/models/tree.model\";\nimport TreeNodeModel, { INode } from \"../../api/models/tree-node.model\";\nimport { IPluginItem } from \"../../api/models/pluginInstance.model\";\nimport * as _ from \"lodash\";\ninterface ITreeProps {\n  selected: IPluginItem;\n  items: IPluginItem[];\n}\n\nclass PipelineTree extends React.Component<ITreeProps> {\n  private treeRef = createRef<HTMLDivElement>();\n  componentDidMount() {\n    const { items } = this.props;\n    this.updateTree(items); // Needed for the onload\n  }\n\n  render() {\n    const { items } = this.props;\n    !!this.treeRef.current &&\n      !!items &&\n      items.length > 0 &&\n      this.updateTree(items);\n    return (\n      <div ref={this.treeRef} id=\"pipelineTree\">\n        <div id=\"pTooltip\" className=\"tooltip\" />\n      </div>\n    );\n  }\n  // Description: Build the tree from items passed to the component\n  updateTree(items: IPluginItem[]) {\n    const { selected } = this.props;\n    !!d3 &&\n      d3\n        .select(\"#pipelineTree\")\n        .selectAll(\"svg\")\n        .remove();\n    const _items = TreeNodeModel.isRootNode(selected) ? [selected] : items;\n    const tree = new TreeModel(_items, selected.previous_id);\n    !!tree.treeChart && this.buildPipelineTree(tree.treeChart, this.treeRef);\n  }\n\n  // ---------------------------------------------------------------------\n  // Description: Builds Webcola/D3 Feed Tree\n  buildPipelineTree = (\n    tree: ITreeChart,\n    treeDiv: React.RefObject<HTMLDivElement>\n  ) => {\n    const width =\n        !!treeDiv.current && treeDiv.current.clientWidth > 0\n          ? treeDiv.current.clientWidth\n          : window.innerWidth / 2 - 290,\n      height = TreeNodeModel.calculateTotalTreeHeight(tree.totalRows); // Need to calculate SVG height ***** working\n\n    const d3cola = cola\n      .d3adaptor(d3)\n      .avoidOverlaps(true)\n      .size([width, height]);\n\n    const svg = d3\n      .select(\"#pipelineTree\")\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    const nodeRadius = 8;\n    tree.nodes.forEach((v: any) => {\n      v.height = v.width = 2 * nodeRadius;\n      v.label =\n        v.item.plugin_name.length > 7\n          ? `${v.item.plugin_name.substring(0, 7)}...`\n          : v.item.plugin_name;\n    });\n\n    // Set up Webcola\n    d3cola\n      .nodes(tree.nodes)\n      .links(tree.links)\n      .flowLayout(\"y\", 70)\n      .symmetricDiffLinkLengths(20)\n      .start(10, 15, 20);\n\n    // Define arrow markers for tree links\n    svg\n      .append(\"svg:defs\")\n      .append(\"svg:marker\")\n      .attr(\"id\", \"end-arrow\")\n      .attr(\"viewBox\", \"0 -5 10 10\")\n      .attr(\"refX\", 6)\n      .attr(\"markerWidth\", 5)\n      .attr(\"markerHeight\", 5)\n      .attr(\"orient\", \"auto\")\n      .append(\"svg:path\")\n      .attr(\"d\", \"M0,-5L10,0L0,5\")\n      .attr(\"fill\", \"#fff\");\n\n    // Define tree links\n    const path = svg\n      .selectAll(\".link\")\n      .data(tree.links)\n      .enter()\n      .append(\"svg:path\")\n      .attr(\"class\", \"link\");\n\n    // Create and place the \"blocks\" containing the circle and the text\n    const elemEnter = svg\n      .selectAll(\"g\")\n      .data(tree.nodes)\n      .enter()\n      .append(\"g\")\n      .attr(\"id\", (d: any) => {\n        return `node_${d.item.id}`; // set the node id using the plugin id\n      })\n      .attr(\"class\", (d: INode) => {\n        return `nodegroup ${d.isRoot && \"active\"}`; // set the node id using the plugin id\n      })\n      .call(d3cola.drag);\n\n    const label = elemEnter\n      .append(\"text\")\n      .text((d: any) => {\n        return d.label;\n      })\n      .attr(\"class\", \"nodelabel\");\n\n    // Define tree nodes\n    const node = elemEnter\n      .append(\"circle\")\n      .attr(\"class\", \"node\")\n      .attr(\"r\", nodeRadius)\n      .on(\"mouseover\", this.handleMouseOver)\n      .on(\"mouseout\", this.handleMouseOut);\n\n    // Move links and nodes together\n    d3cola.on(\"tick\", () => {\n      // draw directed edges with proper padding from node centers\n      path.attr(\"d\", (d: any) => {\n        const deltaX = d.target.x - d.source.x,\n          deltaY = d.target.y - d.source.y,\n          dist = Math.sqrt(deltaX * deltaX + deltaY * deltaY),\n          normX = deltaX / dist,\n          normY = deltaY / dist,\n          sourcePadding = nodeRadius + 25,\n          targetPadding = nodeRadius + 10,\n          sourceX = d.source.x + sourcePadding * normX,\n          sourceY = d.source.y + sourcePadding * normY,\n          targetX = d.target.x - targetPadding * normX,\n          targetY = d.target.y - targetPadding * normY;\n        return `M ${sourceX} ${sourceY} L ${targetX} ${targetY}`;\n      });\n\n      // Position the nodes:\n      node\n        .attr(\"cx\", (d: any) => {\n          return d.x;\n        })\n        .attr(\"cy\", (d: any) => {\n          return d.y;\n        });\n\n      // Position labels and tooltip:\n      label.attr(\"transform\", (d: any) => {\n        return `translate(${d.x - nodeRadius * 2}, ${d.y + nodeRadius * 2.5} )`;\n      });\n    }); // end of on tick\n  }\n\n  handleMouseOver = (d: any, i: number) => {\n    const tooltip = document.getElementById(\"pTooltip\");\n    const tooltipWidth = 200;\n    if (!!tooltip) {\n      const title = `Plugin Name: ${d.item.plugin_name}`;\n      tooltip.innerHTML = title;\n      const height = tooltip.offsetHeight;\n      tooltip.style.width = tooltipWidth + \"px\";\n      tooltip.style.opacity = \"1\";\n      tooltip.style.left = d.x - tooltipWidth * 0.5 + \"px\";\n      tooltip.style.top = d.y - (height + 25) + \"px\";\n    }\n  }\n\n  handleMouseOut = (d: any, i: number) => {\n    const tooltip = document.getElementById(\"pTooltip\");\n    if (!!tooltip) {\n      tooltip.innerHTML = \"\";\n      tooltip.style.opacity = \"0\";\n      tooltip.style.left = \"-9999px\";\n    }\n  }\n\n  // Description: Destroy d3 content\n  componentWillUnmount() {\n    !!d3 && d3.select(\"#pipelineTree\").remove();\n  }\n}\n\nexport default PipelineTree;\n"]},"metadata":{},"sourceType":"module"}