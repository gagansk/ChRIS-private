{"ast":null,"code":"import _classCallCheck from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/src/pages/Feeds/components/FeedView.tsx\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { PageSection, PageSectionVariants, Grid, GridItem } from \"@patternfly/react-core\";\nimport { setSidebarActive as _setSidebarActive } from \"../../../store/ui/actions\";\nimport { getFeedDetailsRequest as _getFeedDetailsRequest, destroyFeed as _destroyFeed } from \"../../../store/feed/actions\";\nimport { getPluginDetailsRequest as _getPluginDetailsRequest } from \"../../../store/plugin/actions\";\nimport { FeedTree, FeedDetails, NodeDetails, PluginDetailPanel } from \"../../../components/index\";\nimport { pf4UtilityStyles } from \"../../../lib/pf4-styleguides\";\nimport \"../feed.scss\";\n\nvar FeedView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FeedView, _React$Component);\n\n  function FeedView(props) {\n    var _this;\n\n    _classCallCheck(this, FeedView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FeedView).call(this, props));\n    var _this$props = _this.props,\n        setSidebarActive = _this$props.setSidebarActive,\n        match = _this$props.match;\n    var feedId = match.params.id;\n    !!feedId && _this.fetchFeedData(feedId);\n    document.title = \"My Feeds - ChRIS UI site\";\n    setSidebarActive({\n      activeGroup: \"feeds_grp\",\n      activeItem: \"my_feeds\"\n    });\n    _this.onNodeClick = _this.onNodeClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // Description: this will get the feed details then retrieve the plugin_instances object\n\n\n  _createClass(FeedView, [{\n    key: \"fetchFeedData\",\n    value: function fetchFeedData(feedId) {\n      var getFeedDetailsRequest = this.props.getFeedDetailsRequest;\n      getFeedDetailsRequest(feedId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          items = _this$props2.items,\n          details = _this$props2.details,\n          selected = _this$props2.selected,\n          descendants = _this$props2.descendants;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, !!details && !!items && React.createElement(PageSection, {\n        variant: PageSectionVariants.darker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(FeedDetails, {\n        details: details,\n        items: items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(PageSection, {\n        className: pf4UtilityStyles.spacingStyles.p_0,\n        variant: PageSectionVariants.light,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        className: \"feed-view\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        className: \"feed-block pf-u-p-md\",\n        sm: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Feed Graph\"), !!items ? React.createElement(FeedTree, {\n        items: items,\n        onNodeClick: this.onNodeClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Empty tree message\")), React.createElement(GridItem, {\n        className: \"node-block pf-u-p-md\",\n        sm: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, !!descendants && !!selected ? React.createElement(NodeDetails, {\n        descendants: descendants,\n        selected: selected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Please click on a node to work on a plugin\")))), React.createElement(PageSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"plugin-info pf-u-py-md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, !!selected ? React.createElement(PluginDetailPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }) : React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Select plugin\"))));\n    } // Description: handle node clicks to load next node information\n\n  }, {\n    key: \"onNodeClick\",\n    value: function onNodeClick(node) {\n      var getPluginDetailsRequest = this.props.getPluginDetailsRequest;\n      getPluginDetailsRequest(node);\n    } // Reset feed state so\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.destroyFeed();\n    }\n  }]);\n\n  return FeedView;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getFeedDetailsRequest: function getFeedDetailsRequest(id) {\n      return dispatch(_getFeedDetailsRequest(id));\n    },\n    setSidebarActive: function setSidebarActive(active) {\n      return dispatch(_setSidebarActive(active));\n    },\n    getPluginDetailsRequest: function getPluginDetailsRequest(item) {\n      return dispatch(_getPluginDetailsRequest(item));\n    },\n    destroyFeed: function destroyFeed() {\n      return dispatch(_destroyFeed());\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var ui = _ref.ui,\n      feed = _ref.feed,\n      user = _ref.user,\n      plugin = _ref.plugin;\n  return {\n    sidebarActiveGroup: ui.sidebarActiveGroup,\n    sidebarActiveItem: ui.sidebarActiveItem,\n    token: user.token,\n    items: feed.items,\n    details: feed.details,\n    selected: plugin.selected,\n    descendants: plugin.descendants\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FeedView);","map":{"version":3,"sources":["/Users/gakumar/Desktop/charts-private/ChRIS_ui/src/pages/Feeds/components/FeedView.tsx"],"names":["React","connect","PageSection","PageSectionVariants","Grid","GridItem","setSidebarActive","getFeedDetailsRequest","destroyFeed","getPluginDetailsRequest","FeedTree","FeedDetails","NodeDetails","PluginDetailPanel","pf4UtilityStyles","FeedView","props","match","feedId","params","id","fetchFeedData","document","title","activeGroup","activeItem","onNodeClick","bind","items","details","selected","descendants","darker","spacingStyles","p_0","light","node","Component","mapDispatchToProps","dispatch","active","item","mapStateToProps","ui","feed","user","plugin","sidebarActiveGroup","sidebarActiveItem","token"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport {\n  PageSection,\n  PageSectionVariants,\n  Grid,\n  GridItem\n} from \"@patternfly/react-core\";\nimport { ApplicationState } from \"../../../store/root/applicationState\";\nimport { setSidebarActive } from \"../../../store/ui/actions\";\nimport { getFeedDetailsRequest, destroyFeed } from \"../../../store/feed/actions\";\nimport { getPluginDetailsRequest } from \"../../../store/plugin/actions\";\nimport { IFeedState } from \"../../../store/feed/types\";\nimport { IUserState } from \"../../../store/user/types\";\nimport { IPluginState } from \"../../../store/plugin/types\";\nimport { IPluginItem } from \"../../../api/models/pluginInstance.model\";\nimport {\n  FeedTree,\n  FeedDetails,\n  NodeDetails,\n  PluginDetailPanel\n} from \"../../../components/index\";\nimport { pf4UtilityStyles } from \"../../../lib/pf4-styleguides\";\nimport \"../feed.scss\";\n\ninterface IPropsFromDispatch {\n  setSidebarActive: typeof setSidebarActive;\n  getFeedDetailsRequest: typeof getFeedDetailsRequest;\n  getPluginDetailsRequest: typeof getPluginDetailsRequest;\n  destroyFeed: typeof destroyFeed;\n}\n\ntype AllProps = IUserState &\n  IFeedState &\n  IPluginState &\n  IPropsFromDispatch &\n  RouteComponentProps<{ id: string }>;\n\nclass FeedView extends React.Component<AllProps> {\n  constructor(props: AllProps) {\n    super(props);\n    const { setSidebarActive, match } = this.props;\n    const feedId = match.params.id;\n    !!feedId && this.fetchFeedData(feedId);\n    document.title = \"My Feeds - ChRIS UI site\";\n    setSidebarActive({\n      activeGroup: \"feeds_grp\",\n      activeItem: \"my_feeds\"\n    });\n    this.onNodeClick = this.onNodeClick.bind(this);\n  }\n\n  // Description: this will get the feed details then retrieve the plugin_instances object\n  fetchFeedData(feedId: string) {\n    const { getFeedDetailsRequest } = this.props;\n    getFeedDetailsRequest(feedId);\n  }\n\n  render() {\n    const { items, details, selected, descendants } = this.props;\n\n    return (\n      <React.Fragment>\n        {/* Top section with Feed information */}\n        {!!details && !!items && (\n          <PageSection variant={PageSectionVariants.darker}>\n            <FeedDetails details={details} items={items} />\n          </PageSection>\n        )}\n        {/* END Top section with Feed information */}\n\n        {/* Mid section with Feed and node actions */}\n        <PageSection\n          className={pf4UtilityStyles.spacingStyles.p_0}\n          variant={PageSectionVariants.light}\n        >\n          <Grid className=\"feed-view\">\n            <GridItem className=\"feed-block pf-u-p-md\" sm={12} md={6}>\n              <h1>Feed Graph</h1>\n              {!!items ? (\n                <FeedTree items={items} onNodeClick={this.onNodeClick} />\n              ) : (\n                <div>Empty tree message</div>\n              )}\n            </GridItem>\n            <GridItem className=\"node-block pf-u-p-md\" sm={12} md={6}>\n              {!!descendants && !!selected ? (\n                <NodeDetails descendants={descendants} selected={selected} />\n              ) : (\n                <div>Please click on a node to work on a plugin</div>\n              )}\n            </GridItem>\n          </Grid>\n        </PageSection>\n        {/* END Mid section with Feed and node actions */}\n\n        {/* Bottom section with information */}\n        <PageSection>\n          <div className=\"plugin-info pf-u-py-md\">\n            {!!selected ? <PluginDetailPanel /> : <h1>Select plugin</h1>}\n          </div>\n        </PageSection>\n        {/* END OF Bottom section with information */}\n      </React.Fragment>\n    );\n  }\n\n  // Description: handle node clicks to load next node information\n  onNodeClick(node: IPluginItem) {\n    const { getPluginDetailsRequest } = this.props;\n    getPluginDetailsRequest(node);\n  }\n\n  // Reset feed state so\n  componentWillUnmount() {\n    this.props.destroyFeed();\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  getFeedDetailsRequest: (id: string) => dispatch(getFeedDetailsRequest(id)),\n  setSidebarActive: (active: { activeItem: string; activeGroup: string }) =>\n    dispatch(setSidebarActive(active)),\n  getPluginDetailsRequest: (item: IPluginItem) =>\n    dispatch(getPluginDetailsRequest(item)),\n    destroyFeed: () => dispatch(destroyFeed())\n});\n\nconst mapStateToProps = ({ ui, feed, user, plugin }: ApplicationState) => ({\n  sidebarActiveGroup: ui.sidebarActiveGroup,\n  sidebarActiveItem: ui.sidebarActiveItem,\n  token: user.token,\n  items: feed.items,\n  details: feed.details,\n  selected: plugin.selected,\n  descendants: plugin.descendants\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FeedView);\n"]},"metadata":{},"sourceType":"module"}