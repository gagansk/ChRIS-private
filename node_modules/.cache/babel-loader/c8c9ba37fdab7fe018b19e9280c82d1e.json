{"ast":null,"code":"import _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport pick from \"lodash/pick\";\nimport React from 'react';\nimport { InputContext, InputContextKeys, MenuContext, MenuContextKeys, TypeaheadContext, TypeaheadContextKeys } from './Context';\nimport { getHintText, getInputText, getIsOnlyResult } from '../utils';\nimport { RETURN } from '../constants';\n\nfunction getTypeaheadContextValue(props) {\n  return _extends({}, pick(props, TypeaheadContextKeys), {\n    hintText: getHintText(props),\n    isOnlyResult: getIsOnlyResult(props)\n  });\n}\n\nfunction getInputContextValue(props) {\n  return _extends({}, pick(props, InputContextKeys), {\n    ref: props.getReferenceElement,\n    value: getInputText(props)\n  });\n}\n\nfunction getMenuContextValue(props) {\n  return _extends({}, pick(props, MenuContextKeys), {\n    show: props.isMenuShown\n  });\n}\n\nvar TypeaheadInnerManager =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(TypeaheadInnerManager, _React$Component);\n\n  function TypeaheadInnerManager() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleKeyDown\", function (e) {\n      var _this$props = _this.props,\n          initialItem = _this$props.initialItem,\n          onKeyDown = _this$props.onKeyDown,\n          onAdd = _this$props.onAdd;\n\n      switch (e.keyCode) {\n        case RETURN:\n          if (initialItem && getIsOnlyResult(_this.props)) {\n            onAdd(initialItem);\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      onKeyDown(e);\n    });\n\n    return _this;\n  }\n\n  var _proto = TypeaheadInnerManager.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this$props2 = this.props,\n        allowNew = _this$props2.allowNew,\n        onInitialItemChange = _this$props2.onInitialItemChange,\n        results = _this$props2.results; // Clear the initial item when there are no results.\n\n    if (!(allowNew || results.length)) {\n      onInitialItemChange(null);\n    }\n  };\n\n  _proto.render = function render() {\n    var inputContext = _extends({}, getInputContextValue(this.props), {\n      onKeyDown: this._handleKeyDown\n    });\n\n    return React.createElement(TypeaheadContext.Provider, {\n      value: getTypeaheadContextValue(this.props)\n    }, React.createElement(InputContext.Provider, {\n      value: inputContext\n    }, React.createElement(MenuContext.Provider, {\n      value: getMenuContextValue(this.props)\n    }, this.props.children(this.props))));\n  };\n\n  return TypeaheadInnerManager;\n}(React.Component);\n\nexport default TypeaheadInnerManager;","map":null,"metadata":{},"sourceType":"module"}