{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport dropdownStyles from \"../../@patternfly/patternfly/components/Dropdown/dropdown.css.js\";\nimport appLauncherStyles from \"../../@patternfly/patternfly/components/AppLauncher/app-launcher.css.js\";\nimport { css } from '@patternfly/react-styles';\nimport PropTypes from 'prop-types';\nimport { componentShape } from '../../helpers/componentShape';\nimport { DropdownContext } from './dropdownConstants';\nimport { KEY_CODES, KEYHANDLER_DIRECTION } from '../../helpers/constants';\nvar propTypes = {\n  /** Anything which can be rendered as dropdown item */\n  children: PropTypes.node,\n\n  /** Classes applied to root element of dropdown item */\n  className: PropTypes.string,\n\n  /** Indicates which component will be used as dropdown item */\n  component: componentShape,\n\n  /** Render dropdown item as disabled option */\n  isDisabled: PropTypes.bool,\n\n  /** Forces display of the hover state of the element */\n  isHovered: PropTypes.bool,\n\n  /** Default hyperlink location */\n  href: PropTypes.string,\n  index: PropTypes.number,\n  context: PropTypes.shape({\n    keyHandler: PropTypes.func,\n    sendRef: PropTypes.func\n  }),\n\n  /** Additional props are spread to the container component */\n  '': PropTypes.any,\n\n  /** Callback for click event */\n  onClick: PropTypes.func\n};\nvar defaultProps = {\n  children: null,\n  className: '',\n  isHovered: false,\n  component: 'a',\n  isDisabled: false,\n  href: '#',\n  onClick: Function.prototype,\n  index: -1,\n  context: {\n    keyHandler: Function.prototype,\n    sendRef: Function.prototype\n  }\n};\n\nvar DropdownItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DropdownItem, _React$Component);\n\n  function DropdownItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DropdownItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DropdownItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"ref\", React.createRef());\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onKeyDown\", function (event) {\n      // Detected key press on this item, notify the menu parent so that the appropriate\n      // item can be focused\n      if (event.keyCode === KEY_CODES.TAB) return;\n      event.preventDefault();\n\n      if (event.keyCode === KEY_CODES.ARROW_UP) {\n        _this.props.context.keyHandler(_this.props.index, KEYHANDLER_DIRECTION.UP);\n      } else if (event.keyCode === KEY_CODES.ARROW_DOWN) {\n        _this.props.context.keyHandler(_this.props.index, KEYHANDLER_DIRECTION.DOWN);\n      } else if (event.keyCode === KEY_CODES.ENTER) {\n        if (!_this.ref.current.getAttribute) ReactDOM.findDOMNode(_this.ref.current).click();else {\n          _this.ref.current.click && _this.ref.current.click();\n        }\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(DropdownItem, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.context.sendRef(this.props.index, this.ref.current, this.props.isDisabled);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          className = _this$props.className,\n          children = _this$props.children,\n          isHovered = _this$props.isHovered,\n          context = _this$props.context,\n          _onClick = _this$props.onClick,\n          Component = _this$props.component,\n          isAppLauncher = _this$props.isAppLauncher,\n          isDisabled = _this$props.isDisabled,\n          index = _this$props.index,\n          props = _objectWithoutProperties(_this$props, [\"className\", \"children\", \"isHovered\", \"context\", \"onClick\", \"component\", \"isAppLauncher\", \"isDisabled\", \"index\"]);\n\n      var additionalProps = props;\n      var classes;\n\n      if (Component === 'a') {\n        additionalProps['aria-disabled'] = isDisabled;\n        additionalProps.tabIndex = isDisabled ? -1 : additionalProps.tabIndex;\n      } else if (Component === 'button') {\n        additionalProps.disabled = isDisabled;\n        additionalProps.type = additionalProps.type || 'button';\n      }\n\n      if (isAppLauncher) {\n        classes = css(appLauncherStyles.appLauncherMenuItem, isDisabled && appLauncherStyles.modifiers.disabled, isHovered && appLauncherStyles.modifiers.hover, className);\n      } else {\n        this.props.role === 'separator' ? classes = className : classes = css(dropdownStyles.dropdownMenuItem, isDisabled && dropdownStyles.modifiers.disabled, isHovered && dropdownStyles.modifiers.hover, className);\n      }\n\n      return React.createElement(DropdownContext.Consumer, null, function (onSelect) {\n        return React.createElement(\"li\", {\n          role: \"none\"\n        }, React.isValidElement(children) ? React.Children.map(children, function (child) {\n          return React.cloneElement(child, {\n            className: \"\".concat(css(isDisabled && dropdownStyles.modifiers.disabled, isHovered && dropdownStyles.modifiers.hover, className), \" \").concat(child.props.className),\n            ref: _this2.ref,\n            onKeyDown: _this2.onKeyDown,\n            onClick: function onClick(event) {\n              if (!isDisabled) {\n                _onClick && _onClick(event);\n                onSelect && onSelect(event);\n              }\n            }\n          });\n        }) : React.createElement(Component, _extends({}, additionalProps, {\n          className: classes,\n          ref: _this2.ref,\n          onKeyDown: _this2.onKeyDown,\n          onClick: function onClick(event) {\n            if (!isDisabled) {\n              _onClick && _onClick(event);\n              onSelect && onSelect(event);\n            }\n          }\n        }), children));\n      });\n    }\n  }]);\n\n  return DropdownItem;\n}(React.Component);\n\nDropdownItem.propTypes = propTypes;\nDropdownItem.defaultProps = defaultProps;\nexport default DropdownItem;","map":null,"metadata":{},"sourceType":"module"}