{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport noop from \"lodash/noop\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport componentOrElement from \"prop-types-extra/lib/componentOrElement\";\nimport { Popper } from 'react-popper';\nvar propTypes = {\n  /**\n   * Specify menu alignment. The default value is `justify`, which makes the\n   * menu as wide as the input and truncates long values. Specifying `left`\n   * or `right` will align the menu to that side and the width will be\n   * determined by the length of menu item values.\n   */\n  align: PropTypes.oneOf(['justify', 'left', 'right']),\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Specify whether the menu should appear above the input.\n   */\n  dropup: PropTypes.bool,\n\n  /**\n   * Whether or not to automatically adjust the position of the menu when it\n   * reaches the viewport boundaries.\n   */\n  flip: PropTypes.bool,\n\n  /* eslint-disable-line react/no-unused-prop-types */\n\n  /**\n   * Invoked when menu visibility changes.\n   */\n  onMenuToggle: PropTypes.func,\n  positionFixed: PropTypes.bool,\n  referenceElement: componentOrElement,\n  show: PropTypes.bool\n};\nvar defaultProps = {\n  align: 'justify',\n  dropup: false,\n  flip: false,\n  onMenuToggle: noop,\n  positionFixed: false,\n  show: false\n};\n\nfunction getModifiers(_ref) {\n  var align = _ref.align,\n      flip = _ref.flip;\n  return {\n    computeStyles: {\n      enabled: true,\n      fn: function fn(data) {\n        // Use the following condition instead of `align === 'justify'` since\n        // it allows the component to fall back to justifying the menu width\n        // even when `align` is undefined.\n        if (align !== 'right' && align !== 'left') {\n          // Set the popper width to match the target width.\n\n          /* eslint-disable-next-line no-param-reassign */\n          data.styles.width = data.offsets.reference.width;\n        }\n\n        return data;\n      }\n    },\n    flip: {\n      enabled: flip\n    },\n    preventOverflow: {\n      escapeWithReference: true\n    }\n  };\n}\n\nvar Overlay =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Overlay, _React$Component);\n\n  function Overlay() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Overlay.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this$props = this.props,\n        onMenuToggle = _this$props.onMenuToggle,\n        show = _this$props.show;\n\n    if (show !== prevProps.show) {\n      onMenuToggle(show);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        align = _this$props2.align,\n        children = _this$props2.children,\n        dropup = _this$props2.dropup,\n        positionFixed = _this$props2.positionFixed,\n        referenceElement = _this$props2.referenceElement,\n        show = _this$props2.show;\n\n    if (!show) {\n      return null;\n    }\n\n    var xPlacement = align === 'right' ? 'end' : 'start';\n    var yPlacement = dropup ? 'top' : 'bottom';\n    return React.createElement(Popper, {\n      modifiers: getModifiers(this.props),\n      placement: yPlacement + \"-\" + xPlacement,\n      positionFixed: positionFixed,\n      referenceElement: referenceElement\n    }, function (_ref2) {\n      var ref = _ref2.ref,\n          props = _objectWithoutPropertiesLoose(_ref2, [\"ref\"]);\n\n      return children(_extends({}, props, {\n        innerRef: ref,\n        inputHeight: referenceElement ? referenceElement.offsetHeight : 0\n      }));\n    });\n  };\n\n  return Overlay;\n}(React.Component);\n\n_defineProperty(Overlay, \"propTypes\", propTypes);\n\n_defineProperty(Overlay, \"defaultProps\", defaultProps);\n\nexport default Overlay;","map":null,"metadata":{},"sourceType":"module"}