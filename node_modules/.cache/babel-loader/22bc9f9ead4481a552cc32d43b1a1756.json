{"ast":null,"code":"import _classCallCheck from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/src/components/explorer/FileTableView.tsx\";\nimport * as React from \"react\";\nimport { Table, TableHeader, TableBody, TableVariant } from \"@patternfly/react-table\";\nimport { DownloadIcon, FolderIcon, OutlinedFileImageIcon } from \"@patternfly/react-icons\";\nimport FeedFileModel from \"../../api/models/feed-file.model\";\nimport { getFileExtension } from \"../../api/models/file-explorer\";\nimport FileDetailView from \"../explorer/FileDetailView\";\n\nvar FileTableView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FileTableView, _React$Component);\n\n  function FileTableView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FileTableView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FileTableView)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.parseTableData = function (node) {\n      return {\n        columns: [\"Name\", \"Date\", \"Type\", \"Size\", \"\"],\n        rows: _this.buildRow(node)\n      };\n    };\n\n    _this.buildRow = function (node) {\n      var arr = new Array();\n\n      if (!!node.children && node.children.length) {\n        node.children.forEach(function (child) {\n          var isfile = !!child.leaf && child.leaf;\n          var newRow = [{\n            title: _this.buildNameCellLink(child, isfile)\n          }, \"TBD\", React.createElement(\"span\", {\n            className: \"capitalize\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, _this.getItemType(child)), \"7.5 MB - TBD\", {\n            title: _this.buildActionCell(child, isfile)\n          }];\n          arr.push(newRow);\n        });\n      }\n\n      return arr;\n    };\n\n    _this.buildNameCellLink = function (child, isfile) {\n      var onClickNode = _this.props.onClickNode;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"black-900\",\n        onClick: function onClick() {\n          onClickNode(child);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, isfile ? React.createElement(OutlinedFileImageIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }) : React.createElement(FolderIcon, {\n        color: \"#ffee99\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), child.module));\n    };\n\n    _this.buildActionCell = function (child, isfile) {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, isfile ? React.createElement(\"a\", {\n        onClick: function onClick() {\n          _this.handleFileDownload(child);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(DownloadIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), \" Download\") : \"\");\n    };\n\n    _this.getItemType = function (item) {\n      var isfile = !!item.leaf && item.leaf;\n      return isfile ? \"\".concat(getFileExtension(item), \" File\") : \"File folder\";\n    };\n\n    return _this;\n  }\n\n  _createClass(FileTableView, [{\n    key: \"render\",\n    value: function render() {\n      var active = this.props.active;\n      var data = this.parseTableData(active);\n      var tableView = React.createElement(\"div\", {\n        className: \"pf-u-p-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Table, {\n        \"aria-label\": \"Data table\",\n        variant: TableVariant.compact,\n        cells: data.columns,\n        rows: data.rows,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(TableHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })));\n      return !!active.leaf && active.leaf ? React.createElement(FileDetailView, {\n        active: active,\n        downloadFileNode: this.handleFileDownload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }) : tableView;\n    } // Description: handle file download\n\n  }, {\n    key: \"handleFileDownload\",\n    value: function handleFileDownload(node) {\n      var downloadUrl = node.file.file_resource;\n\n      if (!!node.file) {\n        FeedFileModel.getFileBlob(downloadUrl).then(function (result) {\n          downloadFile(result.data, node.module);\n        }).catch(function (error) {\n          return console.error(\"(1) Inside error:\", error);\n        });\n      } else {\n        console.error(\"ERROR DOWNLOADING: download url is not defined\");\n      }\n    } // Build data table for\n\n  }]);\n\n  return FileTableView;\n}(React.Component); // Description: Download file\n\n\nfunction downloadFile(Fileblob, fileName) {\n  var url = window.URL.createObjectURL(new Blob([Fileblob]));\n  var link = document.createElement(\"a\");\n  link.href = url;\n  link.setAttribute(\"download\", fileName);\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\n\nexport default React.memo(FileTableView);","map":{"version":3,"sources":["/Users/gakumar/Desktop/charts-private/ChRIS_ui/src/components/explorer/FileTableView.tsx"],"names":["React","Table","TableHeader","TableBody","TableVariant","DownloadIcon","FolderIcon","OutlinedFileImageIcon","FeedFileModel","getFileExtension","FileDetailView","FileTableView","parseTableData","node","columns","rows","buildRow","arr","Array","children","length","forEach","child","isfile","leaf","newRow","title","buildNameCellLink","getItemType","buildActionCell","push","onClickNode","props","module","handleFileDownload","item","active","data","tableView","compact","downloadUrl","file","file_resource","getFileBlob","then","result","downloadFile","catch","error","console","Component","Fileblob","fileName","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","memo"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableVariant\n} from \"@patternfly/react-table\";\nimport {\n  DownloadIcon,\n  FolderIcon,\n  OutlinedFileImageIcon\n} from \"@patternfly/react-icons\";\nimport FeedFileModel from \"../../api/models/feed-file.model\";\nimport { IUITreeNode, getFileExtension } from \"../../api/models/file-explorer\";\nimport FileDetailView from \"../explorer/FileDetailView\";\n\ntype AllProps = {\n  active: IUITreeNode;\n  onClickNode: (node: IUITreeNode) => void;\n};\n\nclass FileTableView extends React.Component<AllProps> {\n  render() {\n    const { active } = this.props;\n    const data = this.parseTableData(active);\n    const tableView = (\n      <div className=\"pf-u-p-sm\">\n        <Table\n          aria-label=\"Data table\"\n          variant={TableVariant.compact}\n          cells={data.columns}\n          rows={data.rows}\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n      </div>\n    );\n    return !!active.leaf && active.leaf ? (\n      <FileDetailView\n        active={active}\n        downloadFileNode={this.handleFileDownload}\n      />\n    ) : (\n      tableView\n    );\n  }\n\n  // Description: handle file download\n  handleFileDownload(node: IUITreeNode) {\n    const downloadUrl = node.file.file_resource;\n    if (!!node.file) {\n      FeedFileModel.getFileBlob(downloadUrl)\n        .then((result: any) => {\n          downloadFile(result.data, node.module);\n        })\n        .catch((error: any) => console.error(\"(1) Inside error:\", error));\n    } else {\n      console.error(\"ERROR DOWNLOADING: download url is not defined\");\n    }\n  }\n\n  // Build data table for\n  parseTableData = (node: IUITreeNode) => {\n    return {\n      columns: [\"Name\", \"Date\", \"Type\", \"Size\", \"\"],\n      rows: this.buildRow(node)\n    };\n  }\n\n  // Description: Build each table data row\n  buildRow = (node: IUITreeNode) => {\n    const arr = new Array();\n    if (!!node.children && node.children.length) {\n      node.children.forEach((child: IUITreeNode) => {\n        const isfile = !!child.leaf && child.leaf;\n        const newRow = [\n          {\n            title: this.buildNameCellLink(child, isfile)\n          },\n          \"TBD\",\n          <span className=\"capitalize\">{this.getItemType(child)}</span>,\n          \"7.5 MB - TBD\",\n          {\n            title: this.buildActionCell(child, isfile)\n          }\n        ];\n        arr.push(newRow);\n      });\n    }\n    return arr;\n  }\n\n  // Description: Build the file or folder name link\n  buildNameCellLink = (child: IUITreeNode, isfile: boolean) => {\n    const { onClickNode } = this.props;\n    return (\n      <React.Fragment>\n        <a\n          className=\"black-900\"\n          onClick={() => {\n            onClickNode(child);\n          }}\n        >\n          {isfile ? <OutlinedFileImageIcon /> : <FolderIcon color=\"#ffee99\" />}\n          {child.module}\n        </a>\n      </React.Fragment>\n    );\n  }\n\n  // Description: Build the Download and other actions cell\n  buildActionCell = (child: IUITreeNode, isfile: boolean) => {\n    return (\n      <React.Fragment>\n        {isfile ? (\n          <a\n            onClick={() => {\n              this.handleFileDownload(child);\n            }}\n          >\n            <DownloadIcon /> Download\n          </a>\n        ) : (\n          \"\"\n        )}\n      </React.Fragment>\n    );\n  }\n\n  // Description: get file type by file extention\n  getItemType = (item: IUITreeNode) => {\n    const isfile = !!item.leaf && item.leaf;\n    return isfile ? `${getFileExtension(item)} File` : \"File folder\";\n  }\n}\n\n// Description: Download file\nfunction downloadFile(Fileblob: any, fileName: string) {\n  const url = window.URL.createObjectURL(new Blob([Fileblob]));\n  const link = document.createElement(\"a\");\n  link.href = url;\n  link.setAttribute(\"download\", fileName);\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\n\nexport default React.memo(FileTableView);\n"]},"metadata":{},"sourceType":"module"}