{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexport { default as selectable } from './decorators/selectable';\nexport { default as sortable } from './decorators/sortable';\nexport { default as cellActions } from './decorators/cellActions';\nexport { default as cellWidth } from './decorators/cellWidth';\nexport { collapsible, expandedRow } from './decorators/collapsible';\nexport { default as headerCol } from './decorators/headerCol';\nexport var emptyTD = function emptyTD() {\n  return {\n    scope: '',\n    component: 'td'\n  };\n};\nexport var scopeColTransformer = function scopeColTransformer() {\n  return {\n    scope: 'col'\n  };\n};\nexport var emptyCol = function emptyCol(label) {\n  return _extends({}, label ? {} : {\n    scope: ''\n  });\n};\nexport var parentId = function parentId(_value, _ref) {\n  var rowData = _ref.rowData;\n  return {\n    parentId: rowData.parent\n  };\n};\nexport var mapProps = function mapProps(_label, _ref2) {\n  var property = _ref2.property,\n      rowData = _ref2.rowData;\n  return _extends({}, rowData[property] && rowData[property].props);\n};","map":null,"metadata":{},"sourceType":"module"}