{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tippy from '@tippy.js/react';\nimport FocusTrap from 'focus-trap-react';\nimport { KEY_CODES } from '../../helpers/constants';\nimport styles from \"../../@patternfly/patternfly/components/Popover/popover.css.js\";\nimport { css, getModifier } from '@patternfly/react-styles';\nimport PopoverArrow from './PopoverArrow';\nimport PopoverContent from './PopoverContent';\nimport PopoverBody from './PopoverBody';\nimport PopoverHeader from './PopoverHeader';\nimport PopoverFooter from './PopoverFooter';\nimport PopoverCloseButton from './PopoverCloseButton';\nimport GenerateId from '../../helpers/GenerateId/GenerateId';\nimport { c_popover_MaxWidth as popoverMaxWidth } from '@patternfly/react-tokens';\nimport { tippyStyles } from '../Tooltip/styles';\ntippyStyles();\nexport var PopoverPosition = {\n  top: 'top',\n  bottom: 'bottom',\n  left: 'left',\n  right: 'right'\n};\nvar propTypes = {\n  /** Popover position */\n  position: PropTypes.oneOf(Object.keys(PopoverPosition).map(function (key) {\n    return PopoverPosition[key];\n  })),\n\n  /** If true, tries to keep the popover in view by flipping it if necessary */\n  enableFlip: PropTypes.bool,\n\n  /** Popover additional class */\n  className: PropTypes.string,\n\n  /** The reference element to which the popover is relatively placed to */\n  children: PropTypes.element.isRequired,\n\n  /** Accessible label, required when header is not present */\n  'aria-label': function ariaLabel(props) {\n    if (!props.headerContent && !props['aria-label']) {\n      return new Error('aria-label is required when header is not used');\n    }\n\n    return null;\n  },\n\n  /** Header content, leave empty for no header */\n  headerContent: PropTypes.node,\n\n  /** Body content */\n  bodyContent: PropTypes.node.isRequired,\n  footerContent: PropTypes.node,\n\n  /**\n   * True to show the popover programmatically. Used in conjunction with the shouldClose prop.\n   * By default, the popover child element handles click events automatically. If you want to control this programmatically,\n   * the popover will not auto-close if the Close button is clicked, ESC key is used, or if a click occurs outside the popover.\n   * Instead, the consumer is responsible for closing the popover themselves by adding a callback listener for the shouldClose prop.\n   */\n  isVisible: PropTypes.bool,\n\n  /**\n   * Callback function that is only invoked when isVisible is also controlled. Called when the popover Close button is\n   * clicked or the ESC key is used\n   */\n  shouldClose: PropTypes.func,\n\n  /** The element to append the popover to, defaults to body */\n  appendTo: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n\n  /** Hides the popover when a click occurs outside (only works if isVisible is not controlled by the user) */\n  hideOnOutsideClick: PropTypes.bool,\n\n  /** Lifecycle function invoked when the popover begins to transition out. */\n  onHide: PropTypes.func,\n\n  /** Lifecycle function invoked when the popover has fully transitioned out. */\n  onHidden: PropTypes.func,\n\n  /** Lifecycle function invoked when the popover begins to transition in. */\n  onShow: PropTypes.func,\n\n  /** Lifecycle function invoked when the popover has fully transitioned in. */\n  onShown: PropTypes.func,\n\n  /** Lifecycle function invoked when the popover has been mounted to the DOM. */\n  onMount: PropTypes.func,\n\n  /** z-index of the popover */\n  zIndex: PropTypes.number,\n\n  /** Maximum width of the tooltip (default 18.75rem) */\n  maxWidth: PropTypes.string,\n\n  /** Aria label for the Close button */\n  closeBtnAriaLabel: PropTypes.string\n};\nvar defaultProps = {\n  position: 'top',\n  enableFlip: true,\n  className: null,\n  isVisible: null,\n  shouldClose: function shouldClose() {\n    return undefined;\n  },\n  'aria-label': '',\n  headerContent: null,\n  footerContent: null,\n  appendTo: function appendTo() {\n    return document.body;\n  },\n  hideOnOutsideClick: true,\n  onHide: function onHide() {\n    return undefined;\n  },\n  onHidden: function onHidden() {\n    return undefined;\n  },\n  onShow: function onShow() {\n    return undefined;\n  },\n  onShown: function onShown() {\n    return undefined;\n  },\n  onMount: function onMount() {\n    return undefined;\n  },\n  zIndex: 9999,\n  maxWidth: popoverMaxWidth && popoverMaxWidth.value,\n  closeBtnAriaLabel: 'Close'\n};\n\nvar Popover =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Popover, _React$Component);\n\n  function Popover(props) {\n    var _this;\n\n    _classCallCheck(this, Popover);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Popover).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"hideOrNotify\", function () {\n      if (_this.props.isVisible === null) {\n        // Handle closing\n        _this.tip.hide();\n      } else {\n        // notify consumer\n        _this.props.shouldClose(_this.tip);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleEscKeyClick\", function (event) {\n      if (event.keyCode === KEY_CODES.ESCAPE_KEY && _this.tip.state.isVisible) {\n        _this.hideOrNotify();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"storeTippyInstance\", function (tip) {\n      _this.tip = tip;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"closePopover\", function () {\n      _this.hideOrNotify();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"hideAllPopovers\", function () {\n      document.querySelectorAll('.tippy-popper').forEach(function (popper) {\n        popper._tippy && popper._tippy.hide();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onHide\", function (tip) {\n      _this.state.isOpen && _this.setState({\n        isOpen: false\n      });\n      return _this.props.onHide(tip);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onHidden\", function (tip) {\n      return _this.props.onHidden(tip);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onMount\", function (tip) {\n      return _this.props.onMount(tip);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onShow\", function (tip) {\n      var _this$props = _this.props,\n          hideOnOutsideClick = _this$props.hideOnOutsideClick,\n          isVisible = _this$props.isVisible,\n          onShow = _this$props.onShow; // hide all other open popovers first if events are managed by us\n\n      !hideOnOutsideClick && isVisible === null && _this.hideAllPopovers();\n      _this.state.isOpen === false && _this.setState({\n        isOpen: true\n      });\n      return onShow(tip);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onShown\", function (tip) {\n      return _this.props.onShown(tip);\n    });\n\n    _this.state = {\n      isOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(Popover, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('keydown', this.handleEscKeyClick, false);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener('keydown', this.handleEscKeyClick, false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          position = _this$props2.position,\n          enableFlip = _this$props2.enableFlip,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          ariaLabel = _this$props2['aria-label'],\n          headerContent = _this$props2.headerContent,\n          bodyContent = _this$props2.bodyContent,\n          footerContent = _this$props2.footerContent,\n          isVisible = _this$props2.isVisible,\n          shouldClose = _this$props2.shouldClose,\n          appendTo = _this$props2.appendTo,\n          hideOnOutsideClick = _this$props2.hideOnOutsideClick,\n          onHide = _this$props2.onHide,\n          onHidden = _this$props2.onHidden,\n          onShow = _this$props2.onShow,\n          onShown = _this$props2.onShown,\n          onMount = _this$props2.onMount,\n          zIndex = _this$props2.zIndex,\n          maxWidth = _this$props2.maxWidth,\n          closeBtnAriaLabel = _this$props2.closeBtnAriaLabel,\n          rest = _objectWithoutProperties(_this$props2, [\"position\", \"enableFlip\", \"children\", \"className\", \"aria-label\", \"headerContent\", \"bodyContent\", \"footerContent\", \"isVisible\", \"shouldClose\", \"appendTo\", \"hideOnOutsideClick\", \"onHide\", \"onHidden\", \"onShow\", \"onShown\", \"onMount\", \"zIndex\", \"maxWidth\", \"closeBtnAriaLabel\"]);\n\n      var content = React.createElement(GenerateId, null, function (randomId) {\n        return _this2.state.isOpen && React.createElement(FocusTrap, {\n          focusTrapOptions: {\n            clickOutsideDeactivates: true\n          }\n        }, React.createElement(\"div\", _extends({\n          className: css(styles.popover, !enableFlip && getModifier(styles, position, styles.modifiers.top), className),\n          role: \"dialog\",\n          \"aria-modal\": \"true\",\n          \"aria-label\": headerContent ? undefined : ariaLabel,\n          \"aria-labelledby\": headerContent ? \"popover-\".concat(randomId, \"-header\") : undefined,\n          \"aria-describedby\": \"popover-\".concat(randomId, \"-body\")\n        }, rest), React.createElement(PopoverArrow, null), React.createElement(PopoverContent, null, React.createElement(PopoverCloseButton, {\n          onClose: _this2.closePopover,\n          \"aria-label\": closeBtnAriaLabel\n        }), headerContent && React.createElement(PopoverHeader, {\n          id: \"popover-\".concat(randomId, \"-header\")\n        }, headerContent), React.createElement(PopoverBody, {\n          id: \"popover-\".concat(randomId, \"-body\")\n        }, bodyContent), footerContent && React.createElement(PopoverFooter, null, footerContent))));\n      });\n      var handleEvents = isVisible === null;\n\n      var shouldHideOnClick = function shouldHideOnClick() {\n        if (handleEvents) {\n          if (hideOnOutsideClick === true) {\n            return true;\n          }\n\n          return 'toggle';\n        }\n\n        return false;\n      };\n\n      return React.createElement(Tippy, {\n        onCreate: this.storeTippyInstance,\n        maxWidth: maxWidth,\n        zIndex: zIndex,\n        appendTo: appendTo,\n        content: content,\n        lazy: true,\n        trigger: handleEvents ? 'click' : 'manual',\n        isVisible: isVisible,\n        hideOnClick: shouldHideOnClick(),\n        animateFill: false,\n        theme: \"pf-tippy\",\n        performance: true,\n        interactive: true,\n        interactiveBorder: 0,\n        placement: position,\n        distance: 25,\n        flip: enableFlip,\n        popperOptions: {\n          modifiers: {\n            preventOverflow: {\n              enabled: enableFlip\n            },\n            hide: {\n              enabled: enableFlip\n            }\n          }\n        },\n        onHide: this.onHide,\n        onHidden: this.onHidden,\n        onShow: this.onShow,\n        onShown: this.onShown,\n        onMount: this.onMount\n      }, children);\n    }\n  }]);\n\n  return Popover;\n}(React.Component);\n\nPopover.propTypes = propTypes;\nPopover.defaultProps = defaultProps;\nexport default Popover;","map":null,"metadata":{},"sourceType":"module"}