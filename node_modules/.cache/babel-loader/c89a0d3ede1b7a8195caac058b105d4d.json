{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar BodyCell = function BodyCell(_ref) {\n  var dataLabel = _ref['data-label'],\n      parentId = _ref.parentId,\n      isVisible = _ref.isVisible,\n      Component = _ref.component,\n      colSpan = _ref.colSpan,\n      props = _objectWithoutProperties(_ref, ['data-label', 'parentId', 'isVisible', 'component', 'colSpan']);\n\n  var mappedProps = _extends({}, dataLabel ? {\n    'data-label': dataLabel\n  } : {}, props);\n\n  return parentId !== undefined && colSpan === undefined || !isVisible ? null : React.createElement(Component, _extends({}, mappedProps, {\n    colSpan: colSpan\n  }));\n};\n\nBodyCell.propTypes = {\n  'data-label': PropTypes.string,\n  component: PropTypes.node\n};\nBodyCell.defaultProps = {\n  component: 'td',\n  'data-label': ''\n};\nexport default BodyCell;","map":null,"metadata":{},"sourceType":"module"}