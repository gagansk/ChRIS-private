{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport DropdownItem from './DropdownItem';\nimport { css } from '@patternfly/react-styles';\nimport { componentShape } from '../../helpers/componentShape';\nimport { DropdownArrowContext } from './dropdownConstants';\n\nvar Item = function Item(_ref) {\n  var className = _ref.className,\n      props = _objectWithoutProperties(_ref, [\"className\"]);\n\n  return React.createElement(DropdownArrowContext.Consumer, null, function (context) {\n    return React.createElement(DropdownItem, _extends({}, props, {\n      context: context,\n      role: \"menuitem\",\n      tabIndex: -1\n    }));\n  });\n};\n\nItem.propTypes = {\n  /** Anything which can be rendered as dropdown item */\n  children: PropTypes.node,\n\n  /** Classess applied to root element of dropdown item */\n  className: PropTypes.string,\n\n  /** Indicates which component will be used as dropdown item */\n  component: componentShape,\n\n  /** Render dropdown item as disabled option */\n  isDisabled: PropTypes.bool,\n\n  /** Forces display of the hover state of the element */\n  isHovered: PropTypes.bool,\n\n  /** Default hyperlink location */\n  href: PropTypes.string,\n\n  /** Additional props are passed to the DropdownItem */\n  '': PropTypes.any\n};\nItem.defaultProps = {\n  children: null,\n  className: '',\n  isHovered: false,\n  component: 'a',\n  isDisabled: false,\n  href: '#'\n};\nexport default Item;","map":null,"metadata":{},"sourceType":"module"}