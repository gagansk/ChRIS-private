{"ast":null,"code":"import _classCallCheck from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/src/components/explorer/FileExplorer.tsx\";\nimport React from \"react\";\nimport Tree from \"react-ui-tree\";\nimport { OutlinedFileAltIcon, FolderIcon, FolderOpenIcon } from \"@patternfly/react-icons\";\nimport \"./file-explorer.scss\";\nimport _ from \"lodash\";\n\nvar FileExplorer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FileExplorer, _React$Component);\n\n  function FileExplorer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FileExplorer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FileExplorer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderNode = function (node) {\n      var active = _this.props.active;\n\n      var isActive = _.isEqual(active, node);\n\n      var isFolder = !!!node.leaf;\n      var isCollapsed = !!!node.collapsed;\n      return React.createElement(\"span\", {\n        className: \"\".concat(isActive && \"active\", \" \").concat(isFolder ? \"folderNode\" : \"fileNode\"),\n        onClick: _this.onClickHandler.bind(null, node),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, isFolder ? !!!isCollapsed ? React.createElement(FolderIcon, {\n        color: \"#ffee99\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }) : React.createElement(FolderOpenIcon, {\n        color: \"#ffee99\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }) : React.createElement(OutlinedFileAltIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), node.module);\n    };\n\n    _this.onClickHandler = function (node) {\n      _this.props.onClickNode(node);\n    };\n\n    return _this;\n  }\n\n  _createClass(FileExplorer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._cancelNodeDraggables();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var explorer = this.props.explorer;\n      return React.createElement(\"div\", {\n        className: \"explorer-tree\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Tree, {\n        paddingLeft: 20,\n        tree: explorer,\n        renderNode: this.renderNode // renderNode(node) return react element\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }));\n    } // Desciption and Notes: function finds all nodes and disables the draggable function that comes with the react-ui-tree\n    // ***** To be develop: A full tree component that doesn't include draggable as default or make it optional\n\n  }, {\n    key: \"_cancelNodeDraggables\",\n    value: function _cancelNodeDraggables() {\n      var arr = document.getElementsByClassName(\"m-node\");\n      !!arr && Array.prototype.forEach.call(arr, function (el) {\n        el.addEventListener(\"mousedown\", function (e) {\n          _inactivateMousedown(e);\n        }, {\n          passive: false\n        });\n      });\n\n      var _inactivateMousedown = function _inactivateMousedown(e) {\n        e.stopPropagation();\n      };\n    }\n  }]);\n\n  return FileExplorer;\n}(React.Component);\n\nexport default React.memo(FileExplorer);","map":{"version":3,"sources":["/Users/gakumar/Desktop/charts-private/ChRIS_ui/src/components/explorer/FileExplorer.tsx"],"names":["React","Tree","OutlinedFileAltIcon","FolderIcon","FolderOpenIcon","_","FileExplorer","renderNode","node","active","props","isActive","isEqual","isFolder","leaf","isCollapsed","collapsed","onClickHandler","bind","module","onClickNode","_cancelNodeDraggables","explorer","arr","document","getElementsByClassName","Array","prototype","forEach","call","el","addEventListener","e","_inactivateMousedown","passive","stopPropagation","Component","memo"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,mBAAT,EAA8BC,UAA9B,EAA0CC,cAA1C,QAAgE,yBAAhE;AAEA,OAAO,sBAAP;AACA,OAAOC,CAAP,MAAc,QAAd;;IAOMC,Y;;;;;;;;;;;;;;;;;;UAEJC,U,GAAa,UAACC,IAAD,EAAuB;AAAA,UAC1BC,MAD0B,GACf,MAAKC,KADU,CAC1BD,MAD0B;;AAElC,UAAME,QAAQ,GAAGN,CAAC,CAACO,OAAF,CAAUH,MAAV,EAAkBD,IAAlB,CAAjB;;AACA,UAAMK,QAAQ,GAAG,CAAC,CAAC,CAACL,IAAI,CAACM,IAAzB;AACA,UAAMC,WAAW,GAAG,CAAC,CAAC,CAACP,IAAI,CAACQ,SAA5B;AACA,aACE;AACE,QAAA,SAAS,YAAKL,QAAQ,IAAI,QAAjB,cAA6BE,QAAQ,GAAG,YAAH,GAAkB,UAAvD,CADX;AAEE,QAAA,OAAO,EAAE,MAAKI,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,EAA+BV,IAA/B,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGGK,QAAQ,GAAI,CAAC,CAAC,CAACE,WAAH,GAAiB,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjB,GAAkD,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtD,GAA8F,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHzG,EAIGP,IAAI,CAACW,MAJR,CADF;AAQD,K;;UAGDF,c,GAAiB,UAACT,IAAD,EAAuB;AACtC,YAAKE,KAAL,CAAWU,WAAX,CAAuBZ,IAAvB;AACD,K;;;;;;;wCAEmB;AAClB,WAAKa,qBAAL;AACD;;;6BAEQ;AAAA,UACAC,QADA,GACY,KAAKZ,KADjB,CACAY,QADA;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,WAAW,EAAE,EADf;AAEE,QAAA,IAAI,EAAEA,QAFR;AAGE,QAAA,UAAU,EAAE,KAAKf,UAHnB,CAG+B;AAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AASD,K,CAED;AACA;;;;4CACwB;AACtB,UAAMgB,GAAG,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,QAAhC,CAAZ;AACA,OAAC,CAACF,GAAF,IAASG,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6BN,GAA7B,EAAkC,UAACO,EAAD,EAAiB;AAC1DA,QAAAA,EAAE,CAACC,gBAAH,CAAoB,WAApB,EAAiC,UAACC,CAAD,EAAY;AAAEC,UAAAA,oBAAoB,CAACD,CAAD,CAApB;AAA0B,SAAzE,EAA2E;AAAEE,UAAAA,OAAO,EAAE;AAAX,SAA3E;AACD,OAFQ,CAAT;;AAGA,UAAMD,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACD,CAAD,EAAmB;AAC9CA,QAAAA,CAAC,CAACG,eAAF;AACD,OAFD;AAGD;;;;EAjDwBnC,KAAK,CAACoC,S;;AAoDjC,eAAepC,KAAK,CAACqC,IAAN,CAAW/B,YAAX,CAAf","sourcesContent":["import React from \"react\";\nimport Tree from \"react-ui-tree\";\nimport { OutlinedFileAltIcon, FolderIcon, FolderOpenIcon } from \"@patternfly/react-icons\";\nimport { IUITreeNode } from \"../../api/models/file-explorer\";\nimport \"./file-explorer.scss\";\nimport _ from \"lodash\";\ntype AllProps = {\n  explorer: IUITreeNode;\n  active: IUITreeNode;\n  onClickNode: (node: IUITreeNode) => void;\n};\n\nclass FileExplorer extends React.Component<AllProps> {\n  // Description: Render node and determine active node\n  renderNode = (node: IUITreeNode) => {\n    const { active } = this.props;\n    const isActive = _.isEqual(active, node);\n    const isFolder = !!!node.leaf;\n    const isCollapsed = !!!node.collapsed;\n    return (\n      <span\n        className={`${isActive && \"active\"} ${isFolder ? \"folderNode\" : \"fileNode\"}`}\n        onClick={this.onClickHandler.bind(null, node)}  >\n        {isFolder ? (!!!isCollapsed ? <FolderIcon color=\"#ffee99\" /> : <FolderOpenIcon color=\"#ffee99\" /> ) : (<OutlinedFileAltIcon />)}\n        {node.module}\n      </span>\n    );\n  }\n\n  // Description: Set local state and pass new data up to parent\n  onClickHandler = (node: IUITreeNode) => {\n    this.props.onClickNode(node);\n  }\n\n  componentDidMount() {\n    this._cancelNodeDraggables();\n  }\n\n  render() {\n    const {explorer} = this.props;\n    return (\n      <div className=\"explorer-tree\">\n        <Tree\n          paddingLeft={20}\n          tree={explorer}\n          renderNode={this.renderNode} // renderNode(node) return react element\n        />\n      </div>\n    );\n  }\n\n  // Desciption and Notes: function finds all nodes and disables the draggable function that comes with the react-ui-tree\n  // ***** To be develop: A full tree component that doesn't include draggable as default or make it optional\n  _cancelNodeDraggables() {\n    const arr = document.getElementsByClassName(\"m-node\");\n    !!arr && Array.prototype.forEach.call(arr, (el: Element) => {\n      el.addEventListener(\"mousedown\", (e: any) => { _inactivateMousedown(e); }, { passive: false });\n    });\n    const _inactivateMousedown = (e: MouseEvent) => {\n      e.stopPropagation();\n    };\n  }\n}\n\nexport default React.memo(FileExplorer);\n"]},"metadata":{},"sourceType":"module"}