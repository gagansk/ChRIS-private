{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar UITreeNode = function (_Component) {\n  _inherits(UITreeNode, _Component);\n\n  function UITreeNode(props) {\n    _classCallCheck(this, UITreeNode);\n\n    var _this = _possibleConstructorReturn(this, (UITreeNode.__proto__ || Object.getPrototypeOf(UITreeNode)).call(this, props));\n\n    _this.renderCollapse = function () {\n      var index = _this.props.index;\n\n      if (index.children && index.children.length) {\n        var collapsed = index.node.collapsed;\n        return _react2.default.createElement('span', {\n          className: (0, _classnames2.default)('collapse', collapsed ? 'caret-right' : 'caret-down'),\n          onMouseDown: function onMouseDown(e) {\n            return e.stopPropagation();\n          },\n          onClick: _this.handleCollapse\n        });\n      }\n\n      return null;\n    };\n\n    _this.renderChildren = function () {\n      var _this$props = _this.props,\n          index = _this$props.index,\n          tree = _this$props.tree,\n          dragging = _this$props.dragging;\n\n      if (index.children && index.children.length) {\n        var childrenStyles = {\n          paddingLeft: _this.props.paddingLeft\n        };\n        return _react2.default.createElement('div', {\n          className: 'children',\n          style: childrenStyles\n        }, index.children.map(function (child) {\n          var childIndex = tree.getIndex(child);\n          return _react2.default.createElement(UITreeNode, {\n            tree: tree,\n            index: childIndex,\n            key: childIndex.id,\n            dragging: dragging,\n            paddingLeft: _this.props.paddingLeft,\n            onCollapse: _this.props.onCollapse,\n            onDragStart: _this.props.onDragStart\n          });\n        }));\n      }\n\n      return null;\n    };\n\n    _this.handleCollapse = function (e) {\n      e.stopPropagation();\n      var nodeId = _this.props.index.id;\n\n      if (_this.props.onCollapse) {\n        _this.props.onCollapse(nodeId);\n      }\n    };\n\n    _this.handleMouseDown = function (e) {\n      var nodeId = _this.props.index.id;\n      var dom = _this.innerRef.current;\n\n      if (_this.props.onDragStart) {\n        _this.props.onDragStart(nodeId, dom, e);\n      }\n    };\n\n    _this.innerRef = _react2.default.createRef();\n    return _this;\n  }\n\n  _createClass(UITreeNode, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          tree = _props.tree,\n          index = _props.index,\n          dragging = _props.dragging;\n      var node = index.node;\n      var styles = {};\n      return _react2.default.createElement('div', {\n        className: (0, _classnames2.default)('m-node', {\n          placeholder: index.id === dragging\n        }),\n        style: styles\n      }, _react2.default.createElement('div', {\n        className: 'inner',\n        ref: this.innerRef,\n        onMouseDown: this.handleMouseDown\n      }, this.renderCollapse(), tree.renderNode(node)), node.collapsed ? null : this.renderChildren());\n    }\n  }]);\n\n  return UITreeNode;\n}(_react.Component);\n\nmodule.exports = UITreeNode;","map":null,"metadata":{},"sourceType":"script"}