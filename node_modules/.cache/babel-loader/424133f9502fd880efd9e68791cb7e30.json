{"ast":null,"code":"import _classCallCheck from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/src/components/plugin/PluginViewerModal.tsx\";\nimport * as React from \"react\";\nimport { Modal } from \"@patternfly/react-core\";\nimport OutputViewerContainer from \"../viewer/OutputViewerContainer\";\n\nvar PluginViewerModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PluginViewerModal, _React$Component);\n\n  function PluginViewerModal() {\n    _classCallCheck(this, PluginViewerModal);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PluginViewerModal).apply(this, arguments));\n  }\n\n  _createClass(PluginViewerModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isModalOpen = _this$props.isModalOpen,\n          handleModalToggle = _this$props.handleModalToggle;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        className: \"dicom-modal\",\n        title: \"ChRIS Output Viewer\",\n        isOpen: isModalOpen,\n        onClose: function onClose() {\n          return handleModalToggle(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(OutputViewerContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return PluginViewerModal;\n}(React.Component);\n\nexport default PluginViewerModal;","map":{"version":3,"sources":["/Users/gakumar/Desktop/charts-private/ChRIS_ui/src/components/plugin/PluginViewerModal.tsx"],"names":["React","Modal","OutputViewerContainer","PluginViewerModal","props","isModalOpen","handleModalToggle","Component"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,QAAsB,wBAAtB;AACA,OAAOC,qBAAP,MAAkC,iCAAlC;;IAOMC,iB;;;;;;;;;;;;;6BACK;AAAA,wBACoC,KAAKC,KADzC;AAAA,UACCC,WADD,eACCA,WADD;AAAA,UACcC,iBADd,eACcA,iBADd;AAEP,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAC,aADZ;AAEE,QAAA,KAAK,EAAC,qBAFR;AAGE,QAAA,MAAM,EAAED,WAHV;AAIE,QAAA,OAAO,EAAE;AAAA,iBAAMC,iBAAiB,CAAC,KAAD,CAAvB;AAAA,SAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF,CADF;AAWD;;;;EAd6BN,KAAK,CAACO,S;;AAiBtC,eAAeJ,iBAAf","sourcesContent":["import * as React from \"react\";\nimport { Modal } from \"@patternfly/react-core\";\nimport OutputViewerContainer from \"../viewer/OutputViewerContainer\";\n\ntype AllProps = {\n  isModalOpen: boolean;\n  handleModalToggle: (open: boolean) => void;\n};\n\nclass PluginViewerModal extends React.Component<AllProps> {\n  render() {\n    const { isModalOpen, handleModalToggle } = this.props;\n    return (\n      <React.Fragment>\n        <Modal\n          className=\"dicom-modal\"\n          title=\"ChRIS Output Viewer\"\n          isOpen={isModalOpen}\n          onClose={() => handleModalToggle(false)} >\n          <OutputViewerContainer />\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PluginViewerModal;\n"]},"metadata":{},"sourceType":"module"}