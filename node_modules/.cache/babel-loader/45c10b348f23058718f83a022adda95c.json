{"ast":null,"code":"/*\n *   File:           configureStore.ts\n *   Description:    this is where the store comes together:\n *                   It contains the createStore() => store, rootReducers, rootSagas, logger and other middleware\n *   Author:         ChRIS UI\n */\nimport { createStore, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { routerMiddleware } from \"connected-react-router\"; // `react-router-redux` is deprecated use `connected-react-router`\n\nimport { initialGlobalState } from \"./root/applicationState\"; // import rootReducer from './root/rootReducer';\n\nimport createRootReducer from \"./root/rootReducer\";\nimport { rootSaga } from \"./root/rootSaga\";\nexport default function configureStore(history) {\n  // Custom redux logger\n  var logger = createLogger({\n    collapsed: true\n  }); // Build Saga middleware\n\n  var sagaMiddleware = createSagaMiddleware(); // Create store\n\n  var store = createStore( // rootReducer,\n  createRootReducer(history), initialGlobalState, applyMiddleware(sagaMiddleware, routerMiddleware(history), logger)); // Run the root saga\n\n  sagaMiddleware.run(rootSaga); // Return the store object.\n\n  return store;\n}","map":{"version":3,"sources":["/Users/gakumar/Desktop/charts-private/ChRIS_ui/src/store/configureStore.ts"],"names":["createStore","applyMiddleware","createLogger","createSagaMiddleware","routerMiddleware","initialGlobalState","createRootReducer","rootSaga","configureStore","history","logger","collapsed","sagaMiddleware","store","run"],"mappings":"AAAA;;;;;;AAMA,SAAgBA,WAAhB,EAA6BC,eAA7B,QAAoD,OAApD;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,gBAAT,QAAkC,wBAAlC,C,CAA4D;;AAC5D,SAASC,kBAAT,QAAqD,yBAArD,C,CACA;;AACA,OAAOC,iBAAP,MAA8B,oBAA9B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAGA,eAAe,SAASC,cAAT,CAAwBC,OAAxB,EAAmE;AAChF;AACA,MAAMC,MAAM,GAAGR,YAAY,CAAC;AAC1BS,IAAAA,SAAS,EAAE;AADe,GAAD,CAA3B,CAFgF,CAMhF;;AACA,MAAMC,cAAc,GAAGT,oBAAoB,EAA3C,CAPgF,CAShF;;AACA,MAAMU,KAAK,GAAGb,WAAW,EACvB;AACAM,EAAAA,iBAAiB,CAACG,OAAD,CAFM,EAGvBJ,kBAHuB,EAIvBJ,eAAe,CACXW,cADW,EAEXR,gBAAgB,CAACK,OAAD,CAFL,EAGXC,MAHW,CAJQ,CAAzB,CAVgF,CAoBhF;;AACAE,EAAAA,cAAc,CAACE,GAAf,CAAmBP,QAAnB,EArBgF,CAuBhF;;AACA,SAAOM,KAAP;AACD","sourcesContent":["/*\n *   File:           configureStore.ts\n *   Description:    this is where the store comes together:\n *                   It contains the createStore() => store, rootReducers, rootSagas, logger and other middleware\n *   Author:         ChRIS UI\n */\nimport { Store, createStore, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { routerMiddleware  } from \"connected-react-router\"; // `react-router-redux` is deprecated use `connected-react-router`\nimport { initialGlobalState, ApplicationState } from \"./root/applicationState\";\n// import rootReducer from './root/rootReducer';\nimport createRootReducer from \"./root/rootReducer\";\nimport { rootSaga } from \"./root/rootSaga\";\nimport { History } from \"history\";\n\nexport default function configureStore(history: History): Store<ApplicationState> {\n  // Custom redux logger\n  const logger = createLogger({\n    collapsed: true\n  });\n\n  // Build Saga middleware\n  const sagaMiddleware = createSagaMiddleware();\n\n  // Create store\n  const store = createStore(\n    // rootReducer,\n    createRootReducer(history),\n    initialGlobalState,\n    applyMiddleware(\n        sagaMiddleware,\n        routerMiddleware(history),\n        logger)\n  );\n\n  // Run the root saga\n  sagaMiddleware.run(rootSaga);\n\n  // Return the store object.\n  return store;\n}\n"]},"metadata":{},"sourceType":"module"}