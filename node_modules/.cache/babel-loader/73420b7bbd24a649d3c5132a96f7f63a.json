{"ast":null,"code":"import _classCallCheck from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gakumar/Desktop/charts-private/ChRIS_ui/src/components/explorer/FileDetailView.tsx\";\nimport * as React from \"react\";\nimport { Alert, Button } from \"@patternfly/react-core\";\nimport { getFileExtension } from \"../../api/models/file-explorer\";\nimport FeedFileModel from \"../../api/models/feed-file.model\";\nimport { DownloadIcon } from \"@patternfly/react-icons\";\nimport { LoadingComponent } from \"..\";\nimport JSONPretty from \"react-json-pretty\";\nimport \"./file-detail.scss\";\n\nvar FileDetailView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FileDetailView, _React$Component);\n\n  function FileDetailView(props) {\n    var _this;\n\n    _classCallCheck(this, FileDetailView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FileDetailView).call(this, props));\n    _this.state = {\n      blob: undefined,\n      blobName: \"\",\n      blobText: null,\n      fileType: \"\"\n    };\n\n    _this.displayTextInIframe = function (blob) {\n      var active = _this.props.active;\n\n      if (!!blob) {\n        var url = window.URL.createObjectURL(new Blob([blob]));\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"header-panel \".concat(_this.state.fileType !== \"json\" && \"sm\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, _this.renderDownloadButton(), React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"File Preview: \", React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, active.module))), React.createElement(\"div\", {\n          className: \"file-iframe\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, _this.state.fileType === \"json\" ? React.createElement(\"div\", {\n          className: \"json-display\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(JSONPretty, {\n          data: _this.state.blobText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        })) : React.createElement(\"div\", {\n          className: \"default-display\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"iframe\", {\n          key: _this.state.blobName,\n          src: url,\n          height: window.innerHeight,\n          width: \"100%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }))));\n      } else {\n        return React.createElement(LoadingComponent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        });\n      }\n    };\n\n    _this.prettyPrintJson = {\n      toHtml: function toHtml(thing) {\n        var htmlEntities = function htmlEntities(string) {\n          // Makes text displayable in browsers\n          return string.replace(/&/g, \"&amp;\").replace(/\\\\\"/g, \"&bsol;&quot;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n        };\n\n        var replacer = function replacer(match, p1, p2, p3, p4) {\n          // Converts the four parenthesized capture groups into HTML\n          var part = {\n            indent: p1,\n            key: p2,\n            value: p3,\n            end: p4\n          };\n          var key = \"<span class=json-key>\";\n          var val = \"<span class=json-value>\";\n          var bool = \"<span class=json-boolean>\";\n          var str = \"<span class=json-string>\";\n          var isBool = [\"true\", \"false\"].includes(part.value);\n          var valSpan = /^\"/.test(part.value) ? str : isBool ? bool : val;\n          var findName = /\"([\\w]+)\": |(.*): /;\n          var indentHtml = part.indent || \"\";\n          var keyHtml = part.key ? key + part.key.replace(findName, \"$1$2\") + \"</span>: \" : \"\";\n          var valueHtml = part.value ? valSpan + part.value + \"</span>\" : \"\";\n          var endHtml = part.end || \"\";\n          return indentHtml + keyHtml + valueHtml + endHtml;\n        };\n\n        var jsonLine = /^( *)(\"[^\"]+\": )?(\"[^\"]*\"|[\\w.+-]*)?([{}[\\],]*)?$/gm;\n        return htmlEntities(JSON.stringify(thing, null, 3)).replace(jsonLine, replacer);\n      }\n    };\n\n    _this.noPreviewMessage = function () {\n      var active = _this.props.active;\n      var ext = getFileExtension(active);\n      var alertText = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"File Name:\"), \" \", active.module), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"File Type:\"), \" \", ext), _this.renderDownloadButton());\n      return React.createElement(\"div\", {\n        className: \"file-detail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Alert, {\n        variant: \"info\",\n        title: \"No preview available for file:\",\n        children: alertText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }));\n    };\n\n    _this.renderDownloadButton = function () {\n      var _this$props = _this.props,\n          active = _this$props.active,\n          downloadFileNode = _this$props.downloadFileNode;\n      return React.createElement(Button, {\n        variant: \"primary\",\n        className: \"float-right\",\n        onClick: function onClick() {\n          downloadFileNode(active);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(DownloadIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), \" Download\");\n    };\n\n    _this.fetchData();\n\n    return _this;\n  }\n\n  _createClass(FileDetailView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var active = this.props.active;\n\n      var fileTypeViewer = function fileTypeViewer() {\n        if (active.module !== _this2.state.blobName) {\n          _this2.fetchData();\n        } else {\n          switch (_this2.state.fileType) {\n            case \"stats\":\n            case \"json\":\n              return _this2.displayTextInIframe(_this2.state.blob);\n            // dcm viewer to be done ***** working\n\n            default:\n              return _this2.noPreviewMessage();\n          }\n        }\n      };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, !!this.state.blob && fileTypeViewer());\n    } // Description: Fetch blob and read it into state to display preview\n\n  }, {\n    key: \"fetchData\",\n    value: function fetchData() {\n      var _this3 = this;\n\n      var active = this.props.active;\n      FeedFileModel.getFileBlob(active.file.file_resource).then(function (result) {\n        var _self = _this3;\n        var fileType = getFileExtension(active);\n\n        _this3.setState({\n          blob: result.data,\n          blobName: active.module,\n          fileType: fileType\n        });\n\n        if (!!result.data) {\n          var reader = new FileReader();\n          reader.addEventListener(\"loadend\", function (e) {\n            var blobText = e.target.result;\n\n            _self.setState({\n              blobText: blobText\n            });\n          });\n          reader.readAsText(result.data);\n        }\n      });\n    } // Description: Return an iframe to display the content\n    // _prettifyJson(jsonString: string) {\n    //   // const json = JSON.parse(jsonString);\n    //   // console.log(json);\n    //   return jsonString;\n    // }\n    // _prettifyJson(json: string) {\n    //   if (typeof json !== \"string\") {\n    //     json = JSON.stringify(json, undefined, 2);\n    //   }\n    //   json = json\n    //     .replace(/&/g, \"&amp;\")\n    //     .replace(/</g, \"&lt;\")\n    //     .replace(/>/g, \"&gt;\");\n    //   return json.replace(\n    //     /(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g,\n    //     (match: any) => {\n    //       let cls = \"number\";\n    //       if (/^\"/.test(match)) {\n    //         if (/:$/.test(match)) {\n    //           cls = \"key\";\n    //         } else {\n    //           cls = \"string\";\n    //         }\n    //       } else if (/true|false/.test(match)) {\n    //         cls = \"boolean\";\n    //       } else if (/null/.test(match)) {\n    //         cls = \"null\";\n    //       }\n    //       return '<span class=\"' + cls + '\">' + match + \"</span>\";\n    //     }\n    //   );\n    // }\n\n  }]);\n\n  return FileDetailView;\n}(React.Component);\n\nexport default FileDetailView;","map":{"version":3,"sources":["/Users/gakumar/Desktop/charts-private/ChRIS_ui/src/components/explorer/FileDetailView.tsx"],"names":["React","Alert","Button","getFileExtension","FeedFileModel","DownloadIcon","LoadingComponent","JSONPretty","FileDetailView","props","state","blob","undefined","blobName","blobText","fileType","displayTextInIframe","active","url","window","URL","createObjectURL","Blob","renderDownloadButton","module","innerHeight","prettyPrintJson","toHtml","thing","htmlEntities","string","replace","replacer","match","p1","p2","p3","p4","part","indent","key","value","end","val","bool","str","isBool","includes","valSpan","test","findName","indentHtml","keyHtml","valueHtml","endHtml","jsonLine","JSON","stringify","noPreviewMessage","ext","alertText","downloadFileNode","fetchData","fileTypeViewer","getFileBlob","file","file_resource","then","result","_self","setState","data","reader","FileReader","addEventListener","e","target","readAsText","Component"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Alert, Button } from \"@patternfly/react-core\";\nimport { IUITreeNode, getFileExtension } from \"../../api/models/file-explorer\";\nimport FeedFileModel from \"../../api/models/feed-file.model\";\nimport { DownloadIcon } from \"@patternfly/react-icons\";\nimport { LoadingComponent } from \"..\";\nimport JSONPretty from \"react-json-pretty\";\nimport \"./file-detail.scss\";\ntype AllProps = {\n  active: IUITreeNode;\n  downloadFileNode: (node: IUITreeNode) => void;\n};\ninterface IState {\n  blob?: Blob;\n  blobName: string;\n  blobText: any;\n  fileType: string;\n}\nclass FileDetailView extends React.Component<AllProps, IState> {\n  constructor(props: AllProps) {\n    super(props);\n    this.fetchData();\n  }\n  state = {\n    blob: undefined,\n    blobName: \"\",\n    blobText: null,\n    fileType: \"\"\n  };\n\n  render() {\n    const { active } = this.props;\n    const fileTypeViewer = () => {\n      if (active.module !== this.state.blobName) {\n        this.fetchData();\n      } else {\n        switch (this.state.fileType) {\n          case \"stats\":\n          case \"json\":\n            return this.displayTextInIframe(this.state.blob);\n          // dcm viewer to be done ***** working\n          default:\n            return this.noPreviewMessage();\n        }\n      }\n    };\n    return <div>{!!this.state.blob && fileTypeViewer()}</div>;\n  }\n\n  // Description: Fetch blob and read it into state to display preview\n  fetchData() {\n    const { active } = this.props;\n    FeedFileModel.getFileBlob(active.file.file_resource).then((result: any) => {\n      const _self = this;\n      const fileType = getFileExtension(active);\n      this.setState({ blob: result.data, blobName: active.module, fileType });\n      if (!!result.data) {\n        const reader = new FileReader();\n        reader.addEventListener(\"loadend\", (e: any) => {\n          const blobText = e.target.result;\n          _self.setState({ blobText });\n        });\n        reader.readAsText(result.data);\n      }\n    });\n  }\n\n  // Description: Return an iframe to display the content\n  displayTextInIframe = (blob?: Blob) => {\n    const { active } = this.props;\n    if (!!blob) {\n      const url = window.URL.createObjectURL(new Blob([blob]));\n      return (\n        <div>\n          <div className={`header-panel ${this.state.fileType !== \"json\" && \"sm\"}`}>\n            {this.renderDownloadButton()}\n            <h1>\n              File Preview: <b>{active.module}</b>\n            </h1>\n          </div>\n          <div className=\"file-iframe\">\n            {this.state.fileType === \"json\" ? (\n              <div className=\"json-display\">\n              <JSONPretty data={this.state.blobText} />\n              </div>\n            ) : (\n              <div className=\"default-display\">\n                <iframe\n                  key={this.state.blobName}\n                  src={url}\n                  height={window.innerHeight}\n                  width=\"100%\"\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      );\n    } else {\n      return <LoadingComponent />;\n    }\n  };\n  prettyPrintJson = {\n    toHtml: (thing: any) => {\n      const htmlEntities = (string: any) => {\n        // Makes text displayable in browsers\n        return string\n          .replace(/&/g, \"&amp;\")\n          .replace(/\\\\\"/g, \"&bsol;&quot;\")\n          .replace(/</g, \"&lt;\")\n          .replace(/>/g, \"&gt;\");\n      };\n      const replacer = (match: any, p1: any, p2: any, p3: any, p4: any) => {\n        // Converts the four parenthesized capture groups into HTML\n        const part = { indent: p1, key: p2, value: p3, end: p4 };\n        const key = \"<span class=json-key>\";\n        const val = \"<span class=json-value>\";\n        const bool = \"<span class=json-boolean>\";\n        const str = \"<span class=json-string>\";\n        const isBool = [\"true\", \"false\"].includes(part.value);\n        const valSpan = /^\"/.test(part.value) ? str : isBool ? bool : val;\n        const findName = /\"([\\w]+)\": |(.*): /;\n        const indentHtml = part.indent || \"\";\n        const keyHtml = part.key\n          ? key + part.key.replace(findName, \"$1$2\") + \"</span>: \"\n          : \"\";\n        const valueHtml = part.value ? valSpan + part.value + \"</span>\" : \"\";\n        const endHtml = part.end || \"\";\n        return indentHtml + keyHtml + valueHtml + endHtml;\n      };\n      const jsonLine = /^( *)(\"[^\"]+\": )?(\"[^\"]*\"|[\\w.+-]*)?([{}[\\],]*)?$/gm;\n      return htmlEntities(JSON.stringify(thing, null, 3)).replace(\n        jsonLine,\n        replacer\n      );\n    }\n  };\n\n  // Description: No preview message available for this file type\n  noPreviewMessage = () => {\n    const { active } = this.props;\n    const ext = getFileExtension(active);\n    const alertText = (\n      <React.Fragment>\n        <label>\n          <b>File Name:</b> {active.module}\n        </label>\n        <label>\n          <b>File Type:</b> {ext}\n        </label>\n        {this.renderDownloadButton()}\n      </React.Fragment>\n    );\n    return (\n      <div className=\"file-detail\">\n        <Alert\n          variant=\"info\"\n          title=\"No preview available for file:\"\n          children={alertText}\n        />\n      </div>\n    );\n  };\n\n  renderDownloadButton = () => {\n    const { active, downloadFileNode } = this.props;\n    return (\n      <Button\n        variant=\"primary\"\n        className=\"float-right\"\n        onClick={() => {\n          downloadFileNode(active);\n        }}\n      >\n        <DownloadIcon /> Download\n      </Button>\n    );\n  };\n\n  // _prettifyJson(jsonString: string) {\n  //   // const json = JSON.parse(jsonString);\n  //   // console.log(json);\n  //   return jsonString;\n\n  // }\n  // _prettifyJson(json: string) {\n  //   if (typeof json !== \"string\") {\n  //     json = JSON.stringify(json, undefined, 2);\n  //   }\n  //   json = json\n  //     .replace(/&/g, \"&amp;\")\n  //     .replace(/</g, \"&lt;\")\n  //     .replace(/>/g, \"&gt;\");\n  //   return json.replace(\n  //     /(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g,\n  //     (match: any) => {\n  //       let cls = \"number\";\n  //       if (/^\"/.test(match)) {\n  //         if (/:$/.test(match)) {\n  //           cls = \"key\";\n  //         } else {\n  //           cls = \"string\";\n  //         }\n  //       } else if (/true|false/.test(match)) {\n  //         cls = \"boolean\";\n  //       } else if (/null/.test(match)) {\n  //         cls = \"null\";\n  //       }\n  //       return '<span class=\"' + cls + '\">' + match + \"</span>\";\n  //     }\n  //   );\n  // }\n}\n\nexport default FileDetailView;\n"]},"metadata":{},"sourceType":"module"}