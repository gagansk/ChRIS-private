{"ast":null,"code":"import { action } from \"typesafe-actions\";\nimport { PluginActionTypes } from \"./types\";\nimport UITreeNodeModel from \"../../api/models/file-explorer\";\nexport var getPluginDescendantsRequest = function getPluginDescendantsRequest(url) {\n  return action(PluginActionTypes.GET_PLUGIN_DESCENDANTS, url);\n};\nexport var getPluginDescendantsSuccess = function getPluginDescendantsSuccess(items) {\n  return action(PluginActionTypes.GET_PLUGIN_DESCENDANTS_SUCCESS, items);\n};\nexport var getPluginFilesRequest = function getPluginFilesRequest(selected) {\n  return action(PluginActionTypes.GET_PLUGIN_FILES, selected);\n};\nexport var getPluginFilesSuccess = function getPluginFilesSuccess(items) {\n  return action(PluginActionTypes.GET_PLUGIN_FILES_SUCCESS, items);\n}; // Description: Parse the files array into a File tree obj\n\nexport var setExplorerSuccess = function setExplorerSuccess(items, selected) {\n  return action(PluginActionTypes.SET_EXPLORER_SUCCESS, new UITreeNodeModel(items, selected).getTree());\n};\nexport var getPluginParametersRequest = function getPluginParametersRequest(url) {\n  return action(PluginActionTypes.GET_PLUGIN_PARAMETERS, url);\n};\nexport var getPluginParametersSuccess = function getPluginParametersSuccess(items) {\n  return action(PluginActionTypes.GET_PLUGIN_PARAMETERS_SUCCESS, items);\n};\nexport var getPluginDetailsRequest = function getPluginDetailsRequest(item) {\n  return action(PluginActionTypes.GET_PLUGIN_DETAILS, item);\n};\nexport var getPluginDetailsSuccess = function getPluginDetailsSuccess(items) {\n  return action(PluginActionTypes.GET_PLUGIN_DETAILS_SUCCESS, items);\n};","map":{"version":3,"sources":["/Users/gakumar/Desktop/charts-private/ChRIS_ui/src/store/plugin/actions.ts"],"names":["action","PluginActionTypes","UITreeNodeModel","getPluginDescendantsRequest","url","GET_PLUGIN_DESCENDANTS","getPluginDescendantsSuccess","items","GET_PLUGIN_DESCENDANTS_SUCCESS","getPluginFilesRequest","selected","GET_PLUGIN_FILES","getPluginFilesSuccess","GET_PLUGIN_FILES_SUCCESS","setExplorerSuccess","SET_EXPLORER_SUCCESS","getTree","getPluginParametersRequest","GET_PLUGIN_PARAMETERS","getPluginParametersSuccess","GET_PLUGIN_PARAMETERS_SUCCESS","getPluginDetailsRequest","item","GET_PLUGIN_DETAILS","getPluginDetailsSuccess","GET_PLUGIN_DETAILS_SUCCESS"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,iBAAT,QAAkC,SAAlC;AAGA,OAAOC,eAAP,MAA4B,gCAA5B;AAGA,OAAO,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACC,GAAD;AAAA,SAAiBJ,MAAM,CAACC,iBAAiB,CAACI,sBAAnB,EAA2CD,GAA3C,CAAvB;AAAA,CAApC;AACP,OAAO,IAAME,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACC,KAAD;AAAA,SAA0BP,MAAM,CAACC,iBAAiB,CAACO,8BAAnB,EAAmDD,KAAnD,CAAhC;AAAA,CAApC;AAEP,OAAO,IAAME,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,QAAD;AAAA,SAA4BV,MAAM,CAACC,iBAAiB,CAACU,gBAAnB,EAAqCD,QAArC,CAAlC;AAAA,CAA9B;AACP,OAAO,IAAME,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACL,KAAD;AAAA,SAA0BP,MAAM,CAACC,iBAAiB,CAACY,wBAAnB,EAA6CN,KAA7C,CAAhC;AAAA,CAA9B,C,CACP;;AACA,OAAO,IAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,CAACP,KAAD,EAAqBG,QAArB;AAAA,SAA+CV,MAAM,CAACC,iBAAiB,CAACc,oBAAnB,EAAyC,IAAIb,eAAJ,CAAoBK,KAApB,EAA2BG,QAA3B,EAAqCM,OAArC,EAAzC,CAArD;AAAA,CAA3B;AAGP,OAAO,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACb,GAAD;AAAA,SAAiBJ,MAAM,CAACC,iBAAiB,CAACiB,qBAAnB,EAA0Cd,GAA1C,CAAvB;AAAA,CAAnC;AACP,OAAO,IAAMe,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACZ,KAAD;AAAA,SAA0BP,MAAM,CAACC,iBAAiB,CAACmB,6BAAnB,EAAkDb,KAAlD,CAAhC;AAAA,CAAnC;AAEP,OAAO,IAAMc,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,IAAD;AAAA,SAAuBtB,MAAM,CAACC,iBAAiB,CAACsB,kBAAnB,EAAuCD,IAAvC,CAA7B;AAAA,CAAhC;AACP,OAAO,IAAME,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACjB,KAAD;AAAA,SAA0BP,MAAM,CAACC,iBAAiB,CAACwB,0BAAnB,EAA+ClB,KAA/C,CAAhC;AAAA,CAAhC","sourcesContent":["import { action } from \"typesafe-actions\";\nimport { PluginActionTypes } from \"./types\";\nimport { IPluginItem } from \"../../api/models/pluginInstance.model\";\nimport {IFeedFile} from \"../../api/models/feed-file.model\";\nimport UITreeNodeModel from \"../../api/models/file-explorer\";\n\n\nexport const getPluginDescendantsRequest = (url: string) => action(PluginActionTypes.GET_PLUGIN_DESCENDANTS, url);\nexport const getPluginDescendantsSuccess = (items: IPluginItem[]) => action(PluginActionTypes.GET_PLUGIN_DESCENDANTS_SUCCESS, items);\n\nexport const getPluginFilesRequest = (selected: IPluginItem) =>  action(PluginActionTypes.GET_PLUGIN_FILES, selected);\nexport const getPluginFilesSuccess = (items: IPluginItem[]) => action(PluginActionTypes.GET_PLUGIN_FILES_SUCCESS, items);\n// Description: Parse the files array into a File tree obj\nexport const setExplorerSuccess = (items: IFeedFile[], selected: IPluginItem) => action(PluginActionTypes.SET_EXPLORER_SUCCESS, new UITreeNodeModel(items, selected).getTree());\n\n\nexport const getPluginParametersRequest = (url: string) => action(PluginActionTypes.GET_PLUGIN_PARAMETERS, url);\nexport const getPluginParametersSuccess = (items: IPluginItem[]) => action(PluginActionTypes.GET_PLUGIN_PARAMETERS_SUCCESS, items);\n\nexport const getPluginDetailsRequest = (item: IPluginItem) => action(PluginActionTypes.GET_PLUGIN_DETAILS, item);\nexport const getPluginDetailsSuccess = (items: IPluginItem[]) => action(PluginActionTypes.GET_PLUGIN_DETAILS_SUCCESS, items);\n"]},"metadata":{},"sourceType":"module"}