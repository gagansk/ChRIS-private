{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport { Body } from 'reactabular-table';\nimport PropTypes from 'prop-types';\nimport { TableContext } from './Table';\nvar propTypes = {\n  /** Additional classes for table body. */\n  className: PropTypes.string,\n\n  /** Specify key which should be used for labeling each row. */\n  rowKey: PropTypes.string,\n\n  /** Function that is fired when user clicks on row.  */\n  onRowClick: PropTypes.func\n};\nvar defaultProps = {\n  rowKey: 'id',\n  className: '',\n  onRowClick: function onRowClick() {\n    return undefined;\n  }\n};\n\nvar ContextBody = function (_React$Component) {\n  _inherits(ContextBody, _React$Component);\n\n  function ContextBody() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ContextBody);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ContextBody.__proto__ || Object.getPrototypeOf(ContextBody)).call.apply(_ref, [this].concat(args))), _this), _this.onRow = function (row, props) {\n      var onRowClick = _this.props.onRowClick;\n      return {\n        isExpanded: row.isExpanded,\n        isOpen: row.isOpen,\n        onClick: function onClick(event) {\n          if (event.target.tagName !== 'INPUT' && event.target.tagName !== 'BUTTON') {\n            onRowClick(event, row, props);\n          }\n        }\n      };\n    }, _this.mapCells = function (row, rowKey) {\n      var headerData = _this.props.headerData;\n      var shiftKey = Boolean(headerData[0] && headerData[0].extraParams.onSelect);\n      shiftKey += Boolean(headerData[0] && headerData[0].extraParams.onCollapse);\n      return _extends({}, row, row && (row.cells || row).reduce(function (acc, curr, key) {\n        var currShift = shiftKey;\n\n        if (curr.props && curr.props.colSpan) {\n          shiftKey += shiftKey + curr.props && curr.props.colSpan - 1;\n        }\n\n        return _extends({}, acc, _defineProperty({}, headerData[currShift + key].property, {\n          title: curr.title || curr,\n          props: _extends({\n            isVisible: true\n          }, curr.props)\n        }));\n      }, {\n        id: row.id !== undefined ? row.id : rowKey\n      }));\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(ContextBody, [{\n    key: 'parentsExpanded',\n    value: function parentsExpanded(parentId) {\n      var rows = this.props.rows;\n      return rows[parentId].hasOwnProperty('parent') ? this.parentsExpanded(rows[parentId].parent) : rows[parentId].isOpen;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          className = _props.className,\n          headerData = _props.headerData,\n          rows = _props.rows,\n          rowKey = _props.rowKey,\n          children = _props.children,\n          onRowClick = _props.onRowClick,\n          props = _objectWithoutProperties(_props, ['className', 'headerData', 'rows', 'rowKey', 'children', 'onRowClick']);\n\n      var mappedRows = headerData.length !== 0 && rows.map(function (oneRow, oneRowKey) {\n        return _extends({}, _this2.mapCells(oneRow, oneRowKey), oneRow.parent !== undefined ? {\n          isExpanded: _this2.parentsExpanded(oneRow.parent) && rows[oneRow.parent].isOpen\n        } : {});\n      });\n      return React.createElement(React.Fragment, null, mappedRows && React.createElement(Body, _extends({}, props, {\n        mappedRows: mappedRows,\n        rows: mappedRows,\n        onRow: this.onRow,\n        rowKey: rowKey,\n        className: className\n      })));\n    }\n  }]);\n\n  return ContextBody;\n}(React.Component);\n\nvar TableBody = function TableBody(props) {\n  return React.createElement(TableContext.Consumer, null, function (_ref2) {\n    var headerData = _ref2.headerData,\n        rows = _ref2.rows;\n    return React.createElement(ContextBody, _extends({}, props, {\n      headerData: headerData,\n      rows: rows\n    }));\n  });\n};\n\nTableBody.propTypes = propTypes;\nTableBody.defaultProps = defaultProps;\nexport default TableBody;","map":null,"metadata":{},"sourceType":"module"}