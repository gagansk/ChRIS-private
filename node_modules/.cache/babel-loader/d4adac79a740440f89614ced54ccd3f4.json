{"ast":null,"code":"import _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport isFunction from \"lodash/isFunction\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Typeahead from '../core/Typeahead';\nimport ClearButton from './ClearButton.react';\nimport Loader from './Loader.react';\nimport TypeaheadInputMulti from './TypeaheadInputMulti.react';\nimport TypeaheadInputSingle from './TypeaheadInputSingle.react';\nimport TypeaheadMenu from './TypeaheadMenu.react';\nimport { preventInputBlur } from '../utils';\nvar propTypes = {\n  /**\n   * Specifies the size of the input.\n   */\n  bsSize: PropTypes.oneOf(['large', 'lg', 'small', 'sm']),\n\n  /**\n   * Displays a button to clear the input when there are selections.\n   */\n  clearButton: PropTypes.bool,\n\n  /**\n   * Bootstrap 4 only. Adds the `is-invalid` classname to the `form-control`.\n   */\n  isInvalid: PropTypes.bool,\n\n  /**\n   * Indicate whether an asynchronous data fetch is happening.\n   */\n  isLoading: PropTypes.bool,\n\n  /**\n   * Bootstrap 4 only. Adds the `is-valid` classname to the `form-control`.\n   */\n  isValid: PropTypes.bool,\n\n  /**\n   * Callback for custom input rendering.\n   */\n  renderInput: PropTypes.func,\n\n  /**\n   * Callback for custom menu rendering.\n   */\n  renderMenu: PropTypes.func\n};\nvar defaultProps = {\n  clearButton: false,\n  isInvalid: false,\n  isLoading: false,\n  isValid: false,\n  renderMenu: function renderMenu(results, menuProps) {\n    return (// TODO: Merged props not registering correctly.\n      // $FlowFixMe\n      React.createElement(TypeaheadMenu, _extends({}, menuProps, {\n        options: results\n      }))\n    );\n  }\n};\n\nvar TypeaheadComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(TypeaheadComponent, _React$Component);\n\n  function TypeaheadComponent() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"_instance\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"getInstance\", function () {\n      return _this._instance;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderInput\", function (inputProps) {\n      var _this$props = _this.props,\n          bsSize = _this$props.bsSize,\n          isInvalid = _this$props.isInvalid,\n          isValid = _this$props.isValid,\n          multiple = _this$props.multiple,\n          renderInput = _this$props.renderInput,\n          renderToken = _this$props.renderToken;\n\n      if (isFunction(renderInput)) {\n        return renderInput(inputProps);\n      }\n\n      var props = _extends({}, inputProps, {\n        bsSize: bsSize,\n        isInvalid: isInvalid,\n        isValid: isValid\n      });\n\n      return multiple ? React.createElement(TypeaheadInputMulti, _extends({}, props, {\n        renderToken: renderToken\n      })) : React.createElement(TypeaheadInputSingle, props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderMenu\", function (results, menuProps) {\n      var _this$props2 = _this.props,\n          emptyLabel = _this$props2.emptyLabel,\n          maxHeight = _this$props2.maxHeight,\n          newSelectionPrefix = _this$props2.newSelectionPrefix,\n          renderMenu = _this$props2.renderMenu,\n          renderMenuItemChildren = _this$props2.renderMenuItemChildren;\n      return renderMenu(results, _extends({}, menuProps, {\n        emptyLabel: emptyLabel,\n        maxHeight: maxHeight,\n        newSelectionPrefix: newSelectionPrefix,\n        renderMenuItemChildren: renderMenuItemChildren\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderAux\", function (props) {\n      var bsSize = props.bsSize,\n          clearButton = props.clearButton,\n          disabled = props.disabled,\n          isLoading = props.isLoading,\n          onClear = props.onClear,\n          selected = props.selected;\n      var content;\n\n      if (isLoading) {\n        content = React.createElement(Loader, {\n          bsSize: bsSize\n        });\n      } else if (clearButton && !disabled && selected.length) {\n        content = React.createElement(ClearButton, {\n          bsSize: bsSize,\n          onClick: onClear,\n          onFocus: function onFocus(e) {\n            // Prevent the main input from auto-focusing again.\n            e.stopPropagation();\n          },\n          onMouseDown: preventInputBlur\n        });\n      }\n\n      return content ? React.createElement(\"div\", {\n        className: cx('rbt-aux', {\n          'rbt-aux-lg': bsSize === 'large' || bsSize === 'lg'\n        })\n      }, content) : null;\n    });\n\n    return _this;\n  }\n\n  var _proto = TypeaheadComponent.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props3 = this.props,\n        children = _this$props3.children,\n        className = _this$props3.className,\n        style = _this$props3.style;\n    return React.createElement(Typeahead, _extends({}, this.props, {\n      ref: function ref(instance) {\n        return _this2._instance = instance;\n      }\n    }), function (props) {\n      var auxContent = _this2._renderAux(props);\n\n      return React.createElement(\"div\", {\n        className: cx('rbt', {\n          'has-aux': !!auxContent\n        }, className),\n        style: _extends({\n          outline: 'none',\n          position: 'relative'\n        }, style),\n        tabIndex: -1\n      }, React.createElement(Typeahead.Input, null, _this2._renderInput), React.createElement(Typeahead.Menu, null, _this2._renderMenu), auxContent, isFunction(children) ? children(props) : children);\n    });\n  };\n\n  return TypeaheadComponent;\n}(React.Component);\n\n_defineProperty(TypeaheadComponent, \"propTypes\", propTypes);\n\n_defineProperty(TypeaheadComponent, \"defaultProps\", defaultProps);\n\nexport default TypeaheadComponent;","map":null,"metadata":{},"sourceType":"module"}