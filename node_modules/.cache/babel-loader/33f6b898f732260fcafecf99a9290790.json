{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from 'react';\nimport styles from \"../../@patternfly/patternfly/components/AppLauncher/app-launcher.css.js\";\nimport { css } from '@patternfly/react-styles';\nimport PropTypes from 'prop-types';\nimport { ApplicationLauncherPosition } from './applicationLauncherConstants';\nimport { DropdownContext, DropdownArrowContext } from '../Dropdown/dropdownConstants';\nimport ReactDOM from 'react-dom';\nimport { keyHandler } from '../../helpers/util';\nimport { KEY_CODES, KEYHANDLER_DIRECTION } from '../../helpers/constants';\nvar propTypes = {\n  /** Anything which can be rendered as dropdown items */\n  children: PropTypes.node,\n\n  /** Classess applied to root element of dropdown menu */\n  className: PropTypes.string,\n\n  /** Flag to indicate if menu is opened */\n  isOpen: PropTypes.bool,\n\n  /** Indicates where menu will be alligned horizontally */\n  position: PropTypes.oneOf(Object.values(ApplicationLauncherPosition)),\n\n  /** Additional props are spread to the container component */\n  '': PropTypes.any\n};\nvar defaultProps = {\n  children: null,\n  className: '',\n  isOpen: true,\n  position: ApplicationLauncherPosition.left\n};\n\nvar ApplicationLauncherMenu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ApplicationLauncherMenu, _React$Component);\n\n  function ApplicationLauncherMenu() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ApplicationLauncherMenu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ApplicationLauncherMenu)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"refsCollection\", []);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"childKeyHandler\", function (index, position) {\n      var custom = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      keyHandler(index, position, _this.refsCollection, _this.props.children, custom);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onKeyDown\", function (event) {\n      // Detected key press on this item, notify the menu parent so that the appropriate\n      // item can be focused\n      if (event.key === KEY_CODES.TAB) return;\n      event.preventDefault();\n\n      if (event.keyCode === KEY_CODES.ARROW_UP) {\n        keyHandler(_this.props.index, KEYHANDLER_DIRECTION.UP, _this.refsCollection, _this.props.children);\n      } else if (event.keyCode === KEY_CODES.ARROW_DOWN) {\n        keyHandler(_this.props.index, KEYHANDLER_DIRECTION.DOWN, _this.refsCollection, _this.props.children);\n      } else if (event.key === KEY_CODES.ENTER) {\n        if (!_this.ref.current.getAttribute) ReactDOM.findDOMNode(_this.ref.current).click();else {\n          _this.ref.current.click && _this.ref.current.click();\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"sendRef\", function (index, node, isDisabled) {\n      if (!node.getAttribute) {\n        _this.refsCollection[index] = ReactDOM.findDOMNode(node);\n      } else if (isDisabled || node.getAttribute('role') === 'separator') {\n        _this.refsCollection[index] = null;\n      } else {\n        _this.refsCollection[index] = node;\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(ApplicationLauncherMenu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.openedOnEnter) {\n        this.refsCollection[0].focus();\n      }\n    }\n  }, {\n    key: \"extendChildren\",\n    value: function extendChildren() {\n      return React.Children.map(this.props.children, function (child, index) {\n        return React.cloneElement(child, {\n          index: index,\n          isAppLauncher: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          isOpen = _this$props.isOpen,\n          position = _this$props.position,\n          children = _this$props.children,\n          Component = _this$props.component,\n          openedOnEnter = _this$props.openedOnEnter,\n          props = _objectWithoutProperties(_this$props, [\"className\", \"isOpen\", \"position\", \"children\", \"component\", \"openedOnEnter\"]);\n\n      return React.createElement(DropdownArrowContext.Provider, {\n        value: {\n          keyHandler: this.childKeyHandler,\n          sendRef: this.sendRef\n        }\n      }, React.createElement(\"ul\", _extends({}, props, {\n        className: css(styles.appLauncherMenu, className),\n        hidden: !isOpen,\n        role: \"menu\"\n      }), this.extendChildren()));\n    }\n  }]);\n\n  return ApplicationLauncherMenu;\n}(React.Component);\n\nApplicationLauncherMenu.propTypes = propTypes;\nApplicationLauncherMenu.defaultProps = defaultProps;\nexport default ApplicationLauncherMenu;","map":null,"metadata":{},"sourceType":"module"}