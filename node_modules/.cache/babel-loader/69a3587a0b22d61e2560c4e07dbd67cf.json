{"ast":null,"code":"/*\n*  File:            plugin/types.ts\n*  Description:     Holds types and constants for managing Chris API feed calls\n*  Author:          ChRIS UI\n*  Notes:           Work in progres ...\n*/\nimport keyMirror from \"keymirror\";\nexport var PluginActionTypes = keyMirror({\n  GET_PLUGIN_DESCENDANTS: null,\n  GET_PLUGIN_DESCENDANTS_SUCCESS: null,\n  GET_PLUGIN_FILES: null,\n  GET_PLUGIN_FILES_SUCCESS: null,\n  SET_EXPLORER_SUCCESS: null,\n  GET_PLUGIN_PARAMETERS: null,\n  GET_PLUGIN_PARAMETERS_SUCCESS: null,\n  GET_PLUGIN_DETAILS: null,\n  GET_PLUGIN_DETAILS_SUCCESS: null,\n  FETCH_COMPLETE: null,\n  // after request completes\n  FETCH_ERROR: null // request failed\n\n});","map":{"version":3,"sources":["/Users/gakumar/Desktop/charts-private/ChRIS_ui/src/store/plugin/types.ts"],"names":["keyMirror","PluginActionTypes","GET_PLUGIN_DESCENDANTS","GET_PLUGIN_DESCENDANTS_SUCCESS","GET_PLUGIN_FILES","GET_PLUGIN_FILES_SUCCESS","SET_EXPLORER_SUCCESS","GET_PLUGIN_PARAMETERS","GET_PLUGIN_PARAMETERS_SUCCESS","GET_PLUGIN_DETAILS","GET_PLUGIN_DETAILS_SUCCESS","FETCH_COMPLETE","FETCH_ERROR"],"mappings":"AAAA;;;;;;AAMA,OAAOA,SAAP,MAAsB,WAAtB;AAcA,OAAO,IAAMC,iBAAiB,GAAGD,SAAS,CAAC;AACvCE,EAAAA,sBAAsB,EAAE,IADe;AAEvCC,EAAAA,8BAA8B,EAAE,IAFO;AAGvCC,EAAAA,gBAAgB,EAAE,IAHqB;AAIvCC,EAAAA,wBAAwB,EAAE,IAJa;AAKvCC,EAAAA,oBAAoB,EAAE,IALiB;AAMvCC,EAAAA,qBAAqB,EAAE,IANgB;AAOvCC,EAAAA,6BAA6B,EAAE,IAPQ;AAQvCC,EAAAA,kBAAkB,EAAE,IARmB;AASvCC,EAAAA,0BAA0B,EAAE,IATW;AAUvCC,EAAAA,cAAc,EAAE,IAVuB;AAUjB;AACtBC,EAAAA,WAAW,EAAE,IAX0B,CAWpB;;AAXoB,CAAD,CAAnC","sourcesContent":["/*\n*  File:            plugin/types.ts\n*  Description:     Holds types and constants for managing Chris API feed calls\n*  Author:          ChRIS UI\n*  Notes:           Work in progres ...\n*/\nimport keyMirror from \"keymirror\";\nimport { IPluginItem } from \"../../api/models/pluginInstance.model\";\nimport { IFeedFile } from \"../../api/models/feed-file.model\";\nimport { IUITreeNode } from \"../../api/models/file-explorer\";\n\n// Description state for main user items[] and item\nexport interface IPluginState {\n    selected?: IPluginItem;\n    descendants?: IPluginItem[];\n    files?: IFeedFile[];\n    parameters?: any[];\n    explorer?: IUITreeNode;\n}\n\nexport const PluginActionTypes = keyMirror({\n    GET_PLUGIN_DESCENDANTS: null,\n    GET_PLUGIN_DESCENDANTS_SUCCESS: null,\n    GET_PLUGIN_FILES: null,\n    GET_PLUGIN_FILES_SUCCESS: null,\n    SET_EXPLORER_SUCCESS: null,\n    GET_PLUGIN_PARAMETERS: null,\n    GET_PLUGIN_PARAMETERS_SUCCESS: null,\n    GET_PLUGIN_DETAILS: null,\n    GET_PLUGIN_DETAILS_SUCCESS: null,\n    FETCH_COMPLETE: null, // after request completes\n    FETCH_ERROR: null, // request failed\n});\n"]},"metadata":{},"sourceType":"module"}