{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from 'react';\nimport styles from \"../../@patternfly/patternfly/components/Select/select.css.js\";\nimport { css } from '@patternfly/react-styles';\nimport PropTypes from 'prop-types';\nimport { SelectContext, KeyTypes } from './selectConstants';\nvar propTypes = {\n  /** additional classes added to the Select Option */\n  className: PropTypes.string,\n\n  /** the value for the option */\n  value: PropTypes.string,\n\n  /** internal index of the option */\n  index: PropTypes.number,\n\n  /** flag indicating if the option is disabled */\n  isDisabled: PropTypes.bool,\n\n  /** flag indicating if the option acts as a placeholder */\n  isPlaceholder: PropTypes.bool,\n\n  /** Internal flag indicating if the option is selected */\n  isSelected: PropTypes.bool,\n\n  /** Optional on click callback */\n  onClick: PropTypes.func,\n\n  /** Internal callback for ref tracking */\n  sendRef: PropTypes.func,\n\n  /** Internal callback for keyboard navigation */\n  keyHandler: PropTypes.func,\n\n  /** Additional props are spread to the container <button> */\n  '': PropTypes.any\n};\nvar defaultProps = {\n  className: '',\n  value: null,\n  index: 0,\n  isDisabled: false,\n  isPlaceholder: false,\n  isSelected: false,\n  onClick: Function.prototype,\n  sendRef: Function.prototype,\n  keyHandler: Function.prototype\n};\n\nvar SelectOption =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SelectOption, _React$Component);\n\n  function SelectOption() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SelectOption);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SelectOption)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"ref\", React.createRef());\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onKeyDown\", function (event) {\n      if (event.key === KeyTypes.Tab) return;\n      event.preventDefault();\n\n      if (event.key === KeyTypes.ArrowUp) {\n        _this.props.keyHandler(_this.props.index, 'up');\n      } else if (event.key === KeyTypes.ArrowDown) {\n        _this.props.keyHandler(_this.props.index, 'down');\n      } else if (event.key === KeyTypes.Enter) {\n        _this.ref.current.click && _this.ref.current.click();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(SelectOption, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.sendRef(this.ref.current, this.props.index);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          className = _this$props.className,\n          value = _this$props.value,\n          _onClick = _this$props.onClick,\n          isDisabled = _this$props.isDisabled,\n          isPlaceholder = _this$props.isPlaceholder,\n          isSelected = _this$props.isSelected,\n          sendRef = _this$props.sendRef,\n          keyHandler = _this$props.keyHandler,\n          index = _this$props.index,\n          props = _objectWithoutProperties(_this$props, [\"className\", \"value\", \"onClick\", \"isDisabled\", \"isPlaceholder\", \"isSelected\", \"sendRef\", \"keyHandler\", \"index\"]);\n\n      return React.createElement(SelectContext.Consumer, null, function (_ref) {\n        var onSelect = _ref.onSelect,\n            onClose = _ref.onClose;\n        return React.createElement(\"li\", {\n          role: \"presentation\"\n        }, React.createElement(\"button\", _extends({}, props, {\n          className: css(styles.selectMenuItem, isSelected && styles.selectMenuItemMatch, isDisabled && styles.modifiers.disabled, className),\n          onClick: function onClick(event) {\n            if (!isDisabled) {\n              _onClick && _onClick(event);\n              onSelect && onSelect(event, value, isPlaceholder);\n              onClose && onClose();\n            }\n          },\n          role: \"option\",\n          \"aria-selected\": isSelected || null,\n          ref: _this2.ref,\n          onKeyDown: _this2.onKeyDown\n        }), value));\n      });\n    }\n  }]);\n\n  return SelectOption;\n}(React.Component);\n\nSelectOption.propTypes = propTypes;\nSelectOption.defaultProps = defaultProps;\nexport default SelectOption;","map":null,"metadata":{},"sourceType":"module"}