{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport PropTypes from 'prop-types';\nimport Login from './Login';\nimport LoginHeader from './LoginHeader';\nimport LoginFooter from './LoginFooter';\nimport LoginMainHeader from './LoginMainHeader';\nimport LoginMainBody from './LoginMainBody';\nimport LoginMainFooter from './LoginMainFooter';\nimport { BackgroundImage } from '../BackgroundImage';\nimport { Brand } from '../Brand';\nimport { List } from '../List';\nvar LoginListVariant = {\n  grid: 'grid',\n  inline: 'inline'\n};\nvar propTypes = {\n  /** Anything that can be rendered inside of the LoginPage (e.g. <LoginPageForm>) */\n  children: PropTypes.node,\n\n  /** Additional classes added to the LoginPage. */\n  className: PropTypes.string,\n\n  /** Attribute that specifies the URL of the brand image for the LoginPage */\n  brandImgSrc: PropTypes.string,\n\n  /** Attribute that specifies the alt text of the brand image for the LoginPage. */\n  brandImgAlt: PropTypes.string,\n\n  /** Attribute that specifies the URL of the background image for the LoginPage */\n  backgroundImgSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n    xs: PropTypes.string,\n    xs2x: PropTypes.string,\n    sm: PropTypes.string,\n    sm2x: PropTypes.string,\n    lg: PropTypes.string,\n    filter: PropTypes.string\n  })]),\n\n  /** Attribute that specifies the alt text of the background image for the LoginPage. */\n  backgroundImgAlt: PropTypes.string,\n\n  /** Content rendered inside of the Text Component of the LoginPage */\n  textContent: PropTypes.string,\n\n  /** Items rendered inside of the Footer List Component of the LoginPage */\n  footerListItems: PropTypes.node,\n\n  /** Adds list variant styles for the Footer List component of the LoginPage.  Values are 'grid' or 'inline' */\n  footerListVariants: PropTypes.oneOf(Object.values(LoginListVariant)),\n\n  /** Title for the Login Main Body Header of the LoginPage */\n  loginTitle: PropTypes.string.isRequired,\n\n  /** Content rendered inside of Login Main Footer Band to display a sign up for account message */\n  signUpForAccountMessage: PropTypes.node,\n\n  /** Content rendered inside of Login Main Footer Band do display a forgot credentials link* */\n  forgotCredentials: PropTypes.node,\n\n  /** Content rendered inside of Social Media Login footer section . */\n  socialMediaLoginContent: PropTypes.node,\n\n  /** Additional props are spread to the Login component */\n  '': PropTypes.any\n};\nvar defaultProps = {\n  children: null,\n  className: '',\n  brandImgSrc: '',\n  brandImgAlt: '',\n  backgroundImgSrc: '',\n  backgroundImgAlt: '',\n  footerListItems: null,\n  textContent: '',\n  footerListVariants: null,\n  signUpForAccountMessage: null,\n  forgotCredentials: null,\n  socialMediaLoginContent: null\n};\n\nvar LoginPage = function LoginPage(_ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      brandImgSrc = _ref.brandImgSrc,\n      brandImgAlt = _ref.brandImgAlt,\n      backgroundImgSrc = _ref.backgroundImgSrc,\n      backgroundImgAlt = _ref.backgroundImgAlt,\n      textContent = _ref.textContent,\n      footerListItems = _ref.footerListItems,\n      footerListVariants = _ref.footerListVariants,\n      loginTitle = _ref.loginTitle,\n      signUpForAccountMessage = _ref.signUpForAccountMessage,\n      forgotCredentials = _ref.forgotCredentials,\n      socialMediaLoginContent = _ref.socialMediaLoginContent,\n      props = _objectWithoutProperties(_ref, [\"className\", \"children\", \"brandImgSrc\", \"brandImgAlt\", \"backgroundImgSrc\", \"backgroundImgAlt\", \"textContent\", \"footerListItems\", \"footerListVariants\", \"loginTitle\", \"signUpForAccountMessage\", \"forgotCredentials\", \"socialMediaLoginContent\"]);\n\n  var HeaderBrand = React.createElement(React.Fragment, null, React.createElement(Brand, {\n    src: brandImgSrc,\n    alt: brandImgAlt\n  }));\n  var Header = React.createElement(LoginHeader, {\n    headerBrand: HeaderBrand\n  });\n  var Footer = React.createElement(LoginFooter, null, React.createElement(\"p\", null, textContent), React.createElement(List, {\n    variant: footerListVariants\n  }, footerListItems));\n  return React.createElement(React.Fragment, null, backgroundImgSrc && React.createElement(BackgroundImage, {\n    src: backgroundImgSrc,\n    alt: backgroundImgAlt\n  }), React.createElement(Login, _extends({\n    header: Header,\n    footer: Footer\n  }, props, {\n    className: css(className)\n  }), React.createElement(LoginMainHeader, {\n    title: loginTitle\n  }), React.createElement(LoginMainBody, null, children), (socialMediaLoginContent || forgotCredentials || signUpForAccountMessage) && React.createElement(LoginMainFooter, {\n    socialMediaLoginContent: socialMediaLoginContent,\n    forgotCredentials: forgotCredentials,\n    signUpForAccountMessage: signUpForAccountMessage\n  })));\n};\n\nLoginPage.propTypes = propTypes;\nLoginPage.defaultProps = defaultProps;\nexport default LoginPage;","map":null,"metadata":{},"sourceType":"module"}