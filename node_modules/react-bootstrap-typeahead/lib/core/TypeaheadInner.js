"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _pick = _interopRequireDefault(require("lodash/pick"));

var _react = _interopRequireDefault(require("react"));

var _Context = require("./Context");

var _utils = require("../utils");

var _constants = require("../constants");

function getTypeaheadContextValue(props) {
  return (0, _extends2.default)({}, (0, _pick.default)(props, _Context.TypeaheadContextKeys), {
    hintText: (0, _utils.getHintText)(props),
    isOnlyResult: (0, _utils.getIsOnlyResult)(props)
  });
}

function getInputContextValue(props) {
  return (0, _extends2.default)({}, (0, _pick.default)(props, _Context.InputContextKeys), {
    ref: props.getReferenceElement,
    value: (0, _utils.getInputText)(props)
  });
}

function getMenuContextValue(props) {
  return (0, _extends2.default)({}, (0, _pick.default)(props, _Context.MenuContextKeys), {
    show: props.isMenuShown
  });
}

var TypeaheadInnerManager =
/*#__PURE__*/
function (_React$Component) {
  (0, _inheritsLoose2.default)(TypeaheadInnerManager, _React$Component);

  function TypeaheadInnerManager() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "_handleKeyDown", function (e) {
      var _this$props = _this.props,
          initialItem = _this$props.initialItem,
          onKeyDown = _this$props.onKeyDown,
          onAdd = _this$props.onAdd;

      switch (e.keyCode) {
        case _constants.RETURN:
          if (initialItem && (0, _utils.getIsOnlyResult)(_this.props)) {
            onAdd(initialItem);
          }

          break;

        default:
          break;
      }

      onKeyDown(e);
    });
    return _this;
  }

  var _proto = TypeaheadInnerManager.prototype;

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var _this$props2 = this.props,
        allowNew = _this$props2.allowNew,
        onInitialItemChange = _this$props2.onInitialItemChange,
        results = _this$props2.results; // Clear the initial item when there are no results.

    if (!(allowNew || results.length)) {
      onInitialItemChange(null);
    }
  };

  _proto.render = function render() {
    var inputContext = (0, _extends2.default)({}, getInputContextValue(this.props), {
      onKeyDown: this._handleKeyDown
    });
    return _react.default.createElement(_Context.TypeaheadContext.Provider, {
      value: getTypeaheadContextValue(this.props)
    }, _react.default.createElement(_Context.InputContext.Provider, {
      value: inputContext
    }, _react.default.createElement(_Context.MenuContext.Provider, {
      value: getMenuContextValue(this.props)
    }, this.props.children(this.props))));
  };

  return TypeaheadInnerManager;
}(_react.default.Component);

var _default = TypeaheadInnerManager;
exports.default = _default;